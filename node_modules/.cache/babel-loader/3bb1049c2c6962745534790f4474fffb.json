{"ast":null,"code":"import _defineProperty from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/src/components/ld/shopManagement/test.jsx\";\nimport React, { Component } from \"react\";\nimport { authAxios } from \"../../../authAxios\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { fetchUser } from \"../../../actions/user\";\nimport { connect } from \"react-redux\";\nimport { orderFilterURL, orderStatusListURL, areaFilterURL } from \"../../../constants\";\nimport Result from \"./result\";\n\nvar Manage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Manage, _Component);\n\n  function Manage(props) {\n    var _this;\n\n    _classCallCheck(this, Manage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Manage).call(this, props));\n\n    _this.fetchOrders = function (e) {\n      // e.preventDefault();\n      var _this$state = _this.state,\n          area = _this$state.area,\n          order_status = _this$state.order_status,\n          phone_number = _this$state.phone_number,\n          name = _this$state.name;\n      console.log(order_status);\n      var userType = _this.props.userType;\n      authAxios.get(orderFilterURL, {\n        params: {\n          userType: userType,\n          area: area,\n          order_status: order_status,\n          phone_number: phone_number,\n          name: name\n        }\n      }).then(function (res) {\n        // setOrders(res.data);\n        _this.setState({\n          orders: res.data\n        });\n      }).catch(function (err) {\n        _this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.fetchOrderStatus = function () {\n      authAxios.get(orderStatusListURL).then(function (res) {\n        // SetOrderStatus(res.data);\n        _this.setState({\n          orderStatus: res.data\n        });\n      }).catch(function (err) {// this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      }); // });\n    };\n\n    _this.fetchAreas = function () {\n      authAxios.get(areaFilterURL).then(function (res) {\n        // setAreas(res.data);\n        _this.setState({\n          areas: res.data\n        });\n      }).catch(function (err) {// this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      }); // });\n    };\n\n    _this.handleChangeArea = function (selectedArea) {\n      _this.setState({\n        area: selectedArea.name\n      });\n    };\n\n    _this.handleChangeStatus = function (status) {\n      _this.setState({\n        order_status: status.name\n      });\n    };\n\n    _this.state = {\n      orders: [],\n      areas: [],\n      area: \"\",\n      orderStatus: [],\n      order_status: \"\",\n      form: {\n        phone_number: \"\",\n        name: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Manage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAreas();\n      this.fetchOrders();\n      this.fetchOrderStatus();\n      this.props.fetchUserType();\n    } //   const order_status =\n    //     values[\"order_status\"] === undefined ? null : values[\"order_status\"];\n    //   const area =\n    //     values[\"SelectedArea\"] === undefined ? null : values[\"SelectedArea\"];\n    //   const name = values[\"name\"] === undefined ? null : values[\"name\"];\n    //   const phone_number =\n    //     values[\"phone_number\"] === undefined ? null : values[\"phon_number\"];\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var fieldName = event.target.name;\n      var fleldVal = event.target.value;\n      this.setState({\n        form: _objectSpread({}, this.state.form, _defineProperty({}, fieldName, fleldVal))\n      }); // console.log(this.state.form.customer_name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.order_status);\n      var _this$state2 = this.state,\n          order_status = _this$state2.order_status,\n          orderStatus = _this$state2.orderStatus,\n          areas = _this$state2.areas,\n          area = _this$state2.area,\n          name = _this$state2.name,\n          orders = _this$state2.orders,\n          phone_number = _this$state2.phone_number;\n      console.log(orders);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Card, {\n        ClassName: \"h-100 shadow-sm bg-white rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        ClassName: \"d-flex felx-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"a-flex mb-2 justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"mb-3\",\n        onChange: this.handleChangeStatus,\n        getOptionLabel: function getOptionLabel(option) {\n          return \"\".concat(option.name);\n        },\n        getOptionValue: function getOptionValue(option) {\n          return \"\".concat(option);\n        },\n        options: orderStatus,\n        isSearchable: true //   filterOption={this.customFilter}\n        ,\n        onInputChange: this.handleInputChange,\n        noOptionsMessage: function noOptionsMessage() {\n          return null;\n        },\n        placeholder: \"Select order status\",\n        autoFocus: true,\n        menuIsOpen: this.state.menuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Select, {\n        className: \"mb-3\",\n        onChange: this.handleChangeArea,\n        getOptionLabel: function getOptionLabel(option) {\n          return \"\".concat(option.name);\n        },\n        getOptionValue: function getOptionValue(option) {\n          return \"\".concat(option);\n        },\n        options: areas,\n        isSearchable: true //   filterOption={this.customFilter}\n        ,\n        onInputChange: this.handleInputChange,\n        noOptionsMessage: function noOptionsMessage() {\n          return null;\n        },\n        placeholder: \"Select area\",\n        autoFocus: true,\n        menuIsOpen: this.state.menuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGridcustomer_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Customer Name\",\n        ClassName: \"mb-3\",\n        defaultValue: this.state.form.name,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridphone_number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"phone_number\",\n        placeholder: \"Phone Number\",\n        ClassName: \"mb-3\",\n        defaultValue: this.state.form.phone_number,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\" //   type=\"submit\"\n        ,\n        onClick: this.fetchOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Submit\"))))), orders ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Result, {\n        orders: orders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"No order to show\"));\n    }\n  }]);\n\n  return Manage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userType: state.user.user.UserType,\n    token: state.auth.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUserType: function fetchUserType() {\n      return dispatch(fetchUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Manage);","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/LD-gcloud/src/components/ld/shopManagement/test.jsx"],"names":["React","Component","authAxios","Form","Button","Card","Select","fetchUser","connect","orderFilterURL","orderStatusListURL","areaFilterURL","Result","Manage","props","fetchOrders","e","state","area","order_status","phone_number","name","console","log","userType","get","params","then","res","setState","orders","data","catch","err","loading","error","fetchOrderStatus","orderStatus","fetchAreas","areas","handleChangeArea","selectedArea","handleChangeStatus","status","form","fetchUserType","event","fieldName","target","fleldVal","value","option","handleInputChange","menuOpen","handleChange","bind","mapStateToProps","user","UserType","token","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { authAxios } from \"../../../authAxios\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { fetchUser } from \"../../../actions/user\";\nimport { connect } from \"react-redux\";\n\nimport {\n  orderFilterURL,\n  orderStatusListURL,\n  areaFilterURL\n} from \"../../../constants\";\nimport Result from \"./result\";\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      areas: [],\n      area: \"\",\n      orderStatus: [],\n      order_status: \"\",\n      form: {\n        phone_number: \"\",\n        name: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAreas();\n    this.fetchOrders();\n    this.fetchOrderStatus();\n    this.props.fetchUserType();\n  }\n\n  //   const order_status =\n  //     values[\"order_status\"] === undefined ? null : values[\"order_status\"];\n  //   const area =\n  //     values[\"SelectedArea\"] === undefined ? null : values[\"SelectedArea\"];\n  //   const name = values[\"name\"] === undefined ? null : values[\"name\"];\n  //   const phone_number =\n  //     values[\"phone_number\"] === undefined ? null : values[\"phon_number\"];\n\n  fetchOrders = e => {\n    // e.preventDefault();\n\n    const { area, order_status, phone_number, name } = this.state;\n    console.log(order_status);\n    const { userType } = this.props;\n    authAxios\n      .get(orderFilterURL, {\n        params: {\n          userType,\n          area,\n          order_status,\n          phone_number,\n          name\n        }\n      })\n      .then(res => {\n        // setOrders(res.data);\n        this.setState({ orders: res.data });\n      })\n      .catch(err => {\n        this.setState({ loading: false, error: err });\n      });\n  };\n\n  fetchOrderStatus = () => {\n    authAxios\n      .get(orderStatusListURL)\n      .then(res => {\n        // SetOrderStatus(res.data);\n        this.setState({ orderStatus: res.data });\n      })\n      .catch(err => {\n        // this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      });\n    // });\n  };\n\n  fetchAreas = () => {\n    authAxios\n      .get(areaFilterURL)\n      .then(res => {\n        // setAreas(res.data);\n        this.setState({ areas: res.data });\n      })\n      .catch(err => {\n        // this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      });\n    // });\n  };\n\n  handleChangeArea = selectedArea => {\n    this.setState({\n      area: selectedArea.name\n    });\n  };\n  handleChangeStatus = status => {\n    this.setState({\n      order_status: status.name\n    });\n  };\n\n  handleChange(event) {\n    let fieldName = event.target.name;\n    let fleldVal = event.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } });\n    // console.log(this.state.form.customer_name);\n  }\n\n  render() {\n    // console.log(this.state.order_status);\n    const {\n      order_status,\n      orderStatus,\n      areas,\n      area,\n      name,\n      orders,\n      phone_number\n    } = this.state;\n    console.log(orders);\n\n    return (\n      <div>\n        <Card ClassName=\"h-100 shadow-sm bg-white rounded\">\n          <Card.Body ClassName=\"d-flex felx-column\">\n            <div ClassName=\"a-flex mb-2 justify-content-between\">\n              <Select\n                className=\"mb-3\"\n                onChange={this.handleChangeStatus}\n                getOptionLabel={option => `${option.name}`}\n                getOptionValue={option => `${option}`}\n                options={orderStatus}\n                isSearchable={true}\n                //   filterOption={this.customFilter}\n                onInputChange={this.handleInputChange}\n                noOptionsMessage={() => null}\n                placeholder={\"Select order status\"}\n                autoFocus={true}\n                menuIsOpen={this.state.menuOpen}\n              />\n\n              <Select\n                className=\"mb-3\"\n                onChange={this.handleChangeArea}\n                getOptionLabel={option => `${option.name}`}\n                getOptionValue={option => `${option}`}\n                options={areas}\n                isSearchable={true}\n                //   filterOption={this.customFilter}\n                onInputChange={this.handleInputChange}\n                noOptionsMessage={() => null}\n                placeholder={\"Select area\"}\n                autoFocus={true}\n                menuIsOpen={this.state.menuOpen}\n              />\n              <Form>\n                <Form.Group controlId=\"formGridcustomer_name\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Customer Name\"\n                    ClassName=\"mb-3\"\n                    defaultValue={this.state.form.name}\n                    onChange={this.handleChange.bind(this)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGridphone_number\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"phone_number\"\n                    placeholder=\"Phone Number\"\n                    ClassName=\"mb-3\"\n                    defaultValue={this.state.form.phone_number}\n                    onChange={this.handleChange.bind(this)}\n                  />\n                </Form.Group>\n\n                <Button\n                  variant=\"primary\"\n                  //   type=\"submit\"\n                  onClick={this.fetchOrders}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </div>\n          </Card.Body>\n        </Card>\n        {orders ? (\n          <div>\n            <Result orders={orders} />\n          </div>\n        ) : (\n          <p>No order to show</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.user.user.UserType,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserType: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Manage);\n"]},"metadata":{},"sourceType":"module"}