{"ast":null,"code":"import _defineProperty from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swalihvpm/Desktop/django-react/LD-gcloud/src/components/ld/pages/forgetPassword.jsx\";\nimport React, { Component } from \"react\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\nimport { resetPassword as _resetPassword } from \"../../../actions/auth\";\nimport axios from \"axios\";\n\nvar ForgetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgetPassword, _Component);\n\n  function ForgetPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgetPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgetPassword).call(this, props));\n    _this.state = {\n      email: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var email = _this.state.email;\n\n      _this.props.resetPassword(email);\n\n      console.log(\"submite\");\n    };\n\n    _this.resetPassword = function (email) {\n      // e.preventDefault();\n      console.log(\"resetting\");\n      axios.post(\"http://127.0.0.1:8000/rest-auth/reset/\", {\n        email: email\n      }).then(function (res) {\n        var responsed = res.data;\n        console.log(responsed); // const token = res.data.key;\n        // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        // localStorage.setItem(\"token\", token);\n        // localStorage.setItem(\"expirationDate\", expirationDate);\n        // dispatch(authSuccess(token));\n        // dispatch(checkAuthTimeout(3600));\n      }).catch(function (err) {// dispatch(authFail(err));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgetPassword, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        title: \"forget password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"pwd-page section-b-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 offset-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Forgot Your Password?\"), React.createElement(\"form\", {\n        className: \"theme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter Your Email\",\n        required: \"\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-solid\",\n        id: \"submit\",\n        placeholder: \"Submit\",\n        required: \"\" //   onClick={this.resetPassword}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return ForgetPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    resetPassword: function resetPassword(email) {\n      return dispatch(_resetPassword(email));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword); // export default ForgetPassword;","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/LD-gcloud/src/components/ld/pages/forgetPassword.jsx"],"names":["React","Component","Breadcrumb","connect","resetPassword","axios","ForgetPassword","props","state","email","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","console","log","post","then","res","responsed","data","catch","err","mapStateToProps","loading","auth","error","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\nimport { resetPassword } from \"../../../actions/auth\";\nimport axios from \"axios\";\n\nclass ForgetPassword extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    email: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { email } = this.state;\n    this.props.resetPassword(email);\n    console.log(\"submite\");\n  };\n\n  resetPassword = email => {\n    // e.preventDefault();\n    console.log(\"resetting\");\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/reset/\", {\n        email: email\n      })\n      .then(res => {\n        const responsed = res.data;\n        console.log(responsed);\n        // const token = res.data.key;\n        // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        // localStorage.setItem(\"token\", token);\n        // localStorage.setItem(\"expirationDate\", expirationDate);\n        // dispatch(authSuccess(token));\n        // dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        // dispatch(authFail(err));\n      });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <Breadcrumb title={\"forget password\"} />\n\n        {/*Forget Password section*/}\n        <section className=\"pwd-page section-b-space\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6 offset-lg-3\">\n                <h2>Forgot Your Password?</h2>\n                <form className=\"theme-form\">\n                  <div className=\"form-row\">\n                    <div className=\"col-md-12\">\n                      <input\n                        name=\"email\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"email\"\n                        placeholder=\"Enter Your Email\"\n                        required=\"\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                    {/* <a href=\"#\" className=\"btn btn-solid\">\n                      Submit\n                    </a> */}\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"Submit\"\n                      required=\"\"\n                      //   onClick={this.resetPassword}\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetPassword: email => dispatch(resetPassword(email))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ForgetPassword);\n\n// export default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}