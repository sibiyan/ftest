{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"../constants/ActionTypes\"; // import { login, signUp } from \"../../constants\";\n\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 100000);\n  };\n};\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\nexport var resetPassword = function resetPassword(email) {\n  return function (dispatch) {\n    // dispatch(authStart());\n    console.log(\"resetting\");\n    axios.post(\"http://127.0.0.1:8000/rest-auth/reset/\", {\n      email: email\n    }).then(function (res) {\n      var responsed = res.data;\n      console.log(responsed); // const token = res.data.key;\n      // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      // localStorage.setItem(\"token\", token);\n      // localStorage.setItem(\"expirationDate\", expirationDate);\n      // dispatch(authSuccess(token));\n      // dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {// dispatch(authFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/swalihvpm/Desktop/django-react/LD-gcloud/src/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined","resetPassword","console","log","responsed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B,C,CACA;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAClC,SAAO;AACLH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACA,SAAO;AACLV,IAAAA,IAAI,EAAEF,WAAW,CAACa;AADb,GAAP;AAGD,CANM;AAQP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,cAAc,EAAI;AAChD,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,KAFS,EAEPK,cAAc,GAAG,MAFV,CAAV;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC/C,SAAO,UAAAJ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CACFsB,IADH,CACQ,wCADR,EACkD;AAC9CF,MAAAA,QAAQ,EAAEA,QADoC;AAE9CC,MAAAA,QAAQ,EAAEA;AAFoC,KADlD,EAKGE,IALH,CAKQ,UAAAC,GAAG,EAAI;AACX,UAAMlB,KAAK,GAAGkB,GAAG,CAACC,IAAJ,CAASC,GAAvB;AACA,UAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC,CAAvB;AACAjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BxB,KAA9B;AACAM,MAAAA,YAAY,CAACkB,OAAb,CAAqB,gBAArB,EAAuCH,cAAvC;AACAV,MAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACD,KAZH,EAaGgB,KAbH,CAaS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAACT,QAAQ,CAACwB,GAAD,CAAT,CAAR;AACD,KAfH;AAgBD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACb,QAAD,EAAWc,KAAX,EAAkBC,SAAlB,EAA6BC,SAA7B,EAA2C;AACnE,SAAO,UAAAnB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CACFsB,IADH,CACQ,+CADR,EACyD;AACrDF,MAAAA,QAAQ,EAAEA,QAD2C;AAErDc,MAAAA,KAAK,EAAEA,KAF8C;AAGrDC,MAAAA,SAAS,EAAEA,SAH0C;AAIrDC,MAAAA,SAAS,EAAEA;AAJ0C,KADzD,EAOGb,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACX,UAAMlB,KAAK,GAAGkB,GAAG,CAACC,IAAJ,CAASC,GAAvB;AACA,UAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC,CAAvB;AACAjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BxB,KAA9B;AACAM,MAAAA,YAAY,CAACkB,OAAb,CAAqB,gBAArB,EAAuCH,cAAvC;AACAV,MAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACD,KAdH,EAeGgB,KAfH,CAeS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAACT,QAAQ,CAACwB,GAAD,CAAT,CAAR;AACD,KAjBH;AAkBD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO,UAAApB,QAAQ,EAAI;AACjB,QAAMX,KAAK,GAAGM,YAAY,CAAC0B,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIhC,KAAK,KAAKiC,SAAd,EAAyB;AACvBtB,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACL,UAAMgB,cAAc,GAAG,IAAIC,IAAJ,CAAShB,YAAY,CAAC0B,OAAb,CAAqB,gBAArB,CAAT,CAAvB;;AACA,UAAIX,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;AAChCX,QAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,OAFD,MAEO;AACLM,QAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,QAAAA,QAAQ,CACNF,gBAAgB,CACd,CAACY,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IADtC,CADV,CAAR;AAKD;AACF;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAAAN,KAAK,EAAI;AACpC,SAAO,UAAAjB,QAAQ,EAAI;AACjB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA1C,IAAAA,KAAK,CACFsB,IADH,CACQ,wCADR,EACkD;AAC9CY,MAAAA,KAAK,EAAEA;AADuC,KADlD,EAIGX,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,UAAMmB,SAAS,GAAGnB,GAAG,CAACC,IAAtB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAFW,CAGX;AACA;AACA;AACA;AACA;AACA;AACD,KAbH,EAcGZ,KAdH,CAcS,UAAAC,GAAG,EAAI,CACZ;AACD,KAhBH;AAiBD,GApBD;AAqBD,CAtBM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"../constants/ActionTypes\";\n// import { login, signUp } from \"../../constants\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 100000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n\nexport const resetPassword = email => {\n  return dispatch => {\n    // dispatch(authStart());\n    console.log(\"resetting\");\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/reset/\", {\n        email: email\n      })\n      .then(res => {\n        const responsed = res.data;\n        console.log(responsed);\n        // const token = res.data.key;\n        // const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        // localStorage.setItem(\"token\", token);\n        // localStorage.setItem(\"expirationDate\", expirationDate);\n        // dispatch(authSuccess(token));\n        // dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        // dispatch(authFail(err));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}