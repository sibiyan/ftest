{"version":3,"sources":["components/ld/checkout/or.jsx"],"names":["OrderSummary","state","quantity","error","handleFetchOrder","_this","setState","loading","authAxios","get","orderSummaryURL","then","res","cartItems","data","catch","err","response","status","handleAddToCart2","id","shop","post","addToCartURL","props","refreshCart","toast","handleRemoveQuantityFromCart","q","orderItemUpdateQuantityURL","handleRemoveItemFromCart","delete","orderItemDeleteURL","hanldeDeleteOrder","console","log","orderDeleteURL","clearKart","this","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_toastify__WEBPACK_IMPORTED_MODULE_15__","className","Fragment","order_items","scope","map","item","index","key","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","src","concat","localhost","product_image","alt","title","final_price","type","onClick","data-type","data-field","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_14__","icon","faMinus","size","color","length","name","value","onChange","testOnchange","faPlus","faTrashAlt","total","process","shop_id","Component","connect","cart","shoppingCart","dispatch","fetchCart"],"mappings":"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","file":"static/js/12.bf159960.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { Table, Row, Col, Container } from \"react-bootstrap\";\n\nimport {\n  orderSummaryURL,\n  addToCartURL,\n  orderItemUpdateQuantityURL,\n  localhost,\n  orderItemDeleteURL,\n  orderDeleteURL\n} from \"../../../constants\";\nimport { fetchCart, clearKart } from \"../../../actions/cart\";\nimport { authAxios } from \"../../../authAxios\";\nimport {\n  faMinus,\n  faPlus,\n  faTrashAlt,\n  faAngleRight,\n  faAngleLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass OrderSummary extends Component {\n  state = {\n    // cartItems: null,\n    quantity: 1,\n    error: null\n  };\n\n  componentDidMount() {\n    // this.handleFetchOrder();\n    this.props.refreshCart();\n  }\n\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ cartItems: res.data, loading: false });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            error: \"You currently do not have an order\",\n            loading: false\n          });\n        } else {\n          this.setState({ error: err, loading: false });\n        }\n      });\n  };\n\n  handleAddToCart2 = (id, shop) => {\n    // console.log(id, shop);\n    this.setState({ loading: true });\n    authAxios\n      .post(addToCartURL, { id, shop })\n      .then(res => {\n        // this.handleFetchOrder();\n        this.props.refreshCart();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n        toast.error(\"Oops there was an error\");\n      });\n  };\n\n  handleRemoveQuantityFromCart = (id, q) => {\n    authAxios\n      .post(orderItemUpdateQuantityURL, { id })\n      .then(res => {\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleRemoveItemFromCart = id => {\n    authAxios\n      .delete(orderItemDeleteURL(id))\n      .then(res => {\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  hanldeDeleteOrder = id => {\n    console.log(id);\n    // console.log(\"delete\");\n    authAxios\n      .delete(orderDeleteURL(id))\n      .then(res => {\n        this.props.clearKart();\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  // testOnchange = () => {\n  //   // console.log(\"hi\");\n  // };\n\n  render() {\n    // const { cartItems } = this.state;\n    const { cartItems } = this.props;\n    // console.log(cartItems);\n\n    return (\n      <div>\n        <ToastContainer />\n        {this.state.loading && <div className=\"loading-cls\"></div>}\n        {cartItems && (\n          <React.Fragment>\n            {cartItems.order_items ? (\n              <section className=\"cart-section section-b-space\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <table className=\"table cart-table table-responsive-xs\">\n                        <thead>\n                          <tr className=\"table-head\">\n                            <th scope=\"col\">Image</th>\n                            <th scope=\"col\">Detial</th>\n                            <th scope=\"col\">price</th>\n                            <th scope=\"col\">quantity</th>\n                            <th scope=\"col\">action</th>\n                            <th scope=\"col\">total</th>\n                          </tr>\n                        </thead>\n                        {/* {cartItems.map((item, index) => { */}\n                        {cartItems.order_items.map((item, index) => {\n                          return (\n                            <tbody key={index}>\n                              <tr>\n                                <td>\n                                  <Link to={\"\"}>\n                                    <img\n                                      src={`${localhost}${item.item.product_image}`}\n                                      alt=\"\"\n                                    />\n                                  </Link>\n                                </td>\n                                <td>\n                                  <Link to={\"\"}>\n                                    {item.item.title}{\" \"}\n                                    <p>\n                                      {\" \"}\n                                      [ {\"Rs: \"}\n                                      {item.final_price}]\n                                    </p>\n                                  </Link>\n                                  <div className=\"mobile-cart-content row\">\n                                    <div className=\"col-xs-4\">\n                                      <div className=\"qty-box\">\n                                        <div className=\"input-group\">\n                                          <span className=\"input-group-prepend\">\n                                            {item.quantity > 1 ? (\n                                              <button\n                                                type=\"button\"\n                                                className=\"btn quantity-left-minus\"\n                                                // onClick={this.minusQty}\n\n                                                onClick={() =>\n                                                  this.handleRemoveQuantityFromCart(\n                                                    item.item.id\n                                                  )\n                                                }\n                                                data-type=\"minus\"\n                                                data-field=\"\"\n                                              >\n                                                {/* <i className=\"fa fa-angle-left\"></i> */}\n                                                <FontAwesomeIcon\n                                                  icon={faMinus}\n                                                  size={\"lg\"}\n                                                  color={\"#ff4c3b\"}\n                                                />\n                                              </button>\n                                            ) : (\n                                              <div>\n                                                {cartItems.order_items.length <\n                                                2 ? (\n                                                  <button\n                                                    type=\"button\"\n                                                    className=\"btn quantity-left-minus\"\n                                                    // onClick={this.minusQty}\n                                                    onClick={() =>\n                                                      this.hanldeDeleteOrder(\n                                                        cartItems.id\n                                                      )\n                                                    }\n                                                    data-type=\"minus\"\n                                                    data-field=\"\"\n                                                  >\n                                                    <FontAwesomeIcon\n                                                      icon={faMinus}\n                                                      size={\"lg\"}\n                                                      color={\"#ff4c3b\"}\n                                                    />\n                                                  </button>\n                                                ) : (\n                                                  // otherwise\n                                                  <button\n                                                    type=\"button\"\n                                                    className=\"btn quantity-left-minus\"\n                                                    // onClick={this.minusQty}\n                                                    onClick={() =>\n                                                      this.handleRemoveItemFromCart(\n                                                        item.id\n                                                      )\n                                                    }\n                                                    data-type=\"minus\"\n                                                    data-field=\"\"\n                                                  >\n                                                    <FontAwesomeIcon\n                                                      icon={faMinus}\n                                                      size={\"lg\"}\n                                                      color={\"#ff4c3b\"}\n                                                    />\n                                                  </button>\n                                                )}\n                                              </div>\n                                            )}\n                                          </span>\n                                          <input\n                                            type=\"text\"\n                                            name=\"quantity\"\n                                            value={item.quantity}\n                                            // defaultValue={0}\n                                            onChange={this.testOnchange}\n                                            // onChange={null}\n                                            className=\"form-control input-number\"\n                                          />\n                                          <span className=\"input-group-prepend\">\n                                            <button\n                                              type=\"button\"\n                                              className=\"btn quantity-right-plus\"\n                                              // onClick={this.handleAddToCart2}\n                                              onClick={() =>\n                                                this.handleAddToCart2(\n                                                  item.item.id,\n                                                  item.shop\n                                                )\n                                              }\n                                              data-type=\"plus\"\n                                              data-field=\"\"\n                                            >\n                                              {/* <i className=\"fa fa-angle-right\"></i> */}\n                                              <FontAwesomeIcon\n                                                icon={faPlus}\n                                                size={\"lg\"}\n                                                color={\"#ff4c3b\"}\n                                              />\n                                            </button>\n                                          </span>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"col-xs-4\">\n                                      <h2 className=\"td-color\">\n                                        {/* {symbol} */}\n                                        {/* {item.final_price} */}\n                                      </h2>\n                                    </div>\n                                    <div className=\"col-xs-4\">\n                                      <h2 className=\"td-color\">\n                                        <a\n                                          //   href=\"#\"\n                                          className=\"icon\"\n                                          onClick={() =>\n                                            this.handleRemoveItemFromCart(\n                                              item.id\n                                            )\n                                          }\n                                        >\n                                          <FontAwesomeIcon\n                                            icon={faTrashAlt}\n                                            size={\"lg\"}\n                                          />\n                                        </a>\n                                      </h2>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td>\n                                  <h4>{item.final_price}</h4>\n                                </td>\n                                <td>\n                                  <div className=\"qty-box\">\n                                    <div className=\"input-group\">\n                                      <span className=\"input-group-prepend\">\n                                        <button\n                                          type=\"button\"\n                                          className=\"btn quantity-left-minus\"\n                                          // onClick={this.minusQty}\n                                          onClick={() =>\n                                            this.handleRemoveQuantityFromCart(\n                                              item.item.id\n                                            )\n                                          }\n                                          data-type=\"minus\"\n                                          data-field=\"\"\n                                        >\n                                          {/* <i className=\"fa fa-angle-left\"></i> */}\n                                          <FontAwesomeIcon\n                                            icon={faMinus}\n                                            size={\"lg\"}\n                                            color={\"#ff4c3b\"}\n                                          />\n                                        </button>\n                                      </span>\n                                      <input\n                                        type=\"text\"\n                                        name=\"quantity\"\n                                        value={item.quantity}\n                                        // onChange={this.changeQty}\n                                        // onChange={this.changeQty}\n                                        className=\"form-control input-number\"\n                                      />\n                                      <span className=\"input-group-prepend\">\n                                        <button\n                                          type=\"button\"\n                                          className=\"btn quantity-right-plus\"\n                                          // onClick={this.handleAddToCart2}\n                                          onClick={() =>\n                                            this.handleAddToCart2(\n                                              item.item.id,\n                                              item.shop\n                                            )\n                                          }\n                                          data-type=\"plus\"\n                                          data-field=\"\"\n                                        >\n                                          {/* <i className=\"fa fa-angle-right\"></i> */}\n                                          <FontAwesomeIcon\n                                            icon={faPlus}\n                                            size={\"lg\"}\n                                            color={\"#ff4c3b\"}\n                                          />\n                                        </button>\n                                      </span>\n                                    </div>\n                                  </div>\n                                  {/* {item.qty >= item.stock ? \"out of Stock\" : \"\"} */}\n                                </td>\n                                <td>\n                                  <a\n                                    // href=\"#\"\n                                    className=\"icon\"\n                                    // onClick={() => this.props.removeFromCart(item)}\n                                    onClick={() =>\n                                      this.handleRemoveItemFromCart(item.id)\n                                    }\n                                  >\n                                    {/* <i className=\"fa fa-times\"></i> */}\n                                    <FontAwesomeIcon\n                                      icon={faTrashAlt}\n                                      size={\"lg\"}\n                                    />\n                                  </a>\n                                </td>\n                                <td>\n                                  <h2 className=\"td-color\">\n                                    {/* {symbol} */}\n                                    {item.final_price}\n                                  </h2>\n                                </td>\n                              </tr>\n                            </tbody>\n                          );\n                        })}\n                      </table>\n                      <table className=\"table cart-table table-responsive-md\">\n                        <tfoot>\n                          <tr>\n                            <td>total price :</td>\n                            <td>\n                              <h2>\n                                {/* {symbol}  */}\n                                {cartItems.total}{\" \"}\n                              </h2>\n                            </td>\n                          </tr>\n                        </tfoot>\n                      </table>\n                    </div>\n                  </div>\n                  <div className=\"row cart-buttons\">\n                    <div className=\"col-6\">\n                      <Link\n                        // to={\"\"}\n                        to={`${process.env.PUBLIC_URL}/shops/${cartItems.shop_id}`}\n                        className=\"btn btn-solid\"\n                      >\n                        continue shopping\n                      </Link>\n                    </div>\n                    <div className=\"col-6\">\n                      <Link\n                        to={`${process.env.PUBLIC_URL}/checkout`}\n                        className=\"btn btn-solid\"\n                      >\n                        check out\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : (\n              <section className=\"cart-section section-b-space\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <div>\n                        <div className=\"col-sm-12 empty-cart-cls text-center\">\n                          <img\n                            src={`${process.env.PUBLIC_URL}/media/cart/icon-empty-cart.png`}\n                            className=\"img-fluid mb-4\"\n                            alt=\"\"\n                          />\n                          <h3>\n                            <strong>Your Cart is Empty</strong>\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  cartItems: state.cart.shoppingCart\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart()),\n    clearKart: () => dispatch(clearKart)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderSummary);\n"],"sourceRoot":""}