{"version":3,"sources":["components/ld/manageOrders/CustomInput.jsx","components/ld/manageOrders/testTable.jsx","components/ld/manageOrders/shopOrderTable.jsx"],"names":["CustomInput","props","placeholder","name","value","_props$onChange","onChange","react_default","a","createElement","Form","Group","Control","window","Date","prototype","isValid","this","getTime","ColumnFilter","_ref","_ref$column","column","filterValue","setFilter","filter","e","target","undefined","concat","ReactTable","_ref2","columns","data","filterTypes","year","rows","id","row","rowValue","values","Number","getFullYear","text","String","toLowerCase","startsWith","defaultColumn","Filter","_useTable","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","Container","Table","Object","assign","responsive","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","i","render","getHeaderProps","isSorted","isSortedDesc","getSortByToggleProps","canFilter","extraClass","key","className","getRowProps","cells","cell","getCellProps","Manage","_useState","useState","_useState2","_Users_swalihvpm_Desktop_django_react_ftest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","orders","setOrders","_useState3","setHours","setMinutes","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","useEffect","fetchOrders","endingtDate","staringtDate","authAxios","get","orderFilterURL","params","then","res","catch","err","Header","accessor","Cell","react__WEBPACK_IMPORTED_MODULE_1___default","href","ClassName","react_datepicker__WEBPACK_IMPORTED_MODULE_8___default","selected","selectsStart","date","dateFormat","popperModifiers","preventOverflow","enabled","timeFormat","injectTimes","type","onClick","required","react_bootstrap_Card__WEBPACK_IMPORTED_MODULE_9__","bg","style","width","Body","Title","length","_testTable__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"static/js/35.9763d046.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default props => {\n  let { placeholder, name, value, onChange = () => null } = props;\n  return (\n    // <div class=\"col-lg\">\n    <Form.Group>\n      <Form.Control\n        placeholder={placeholder}\n        name={name}\n        value={value ? value : \"\"}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n};\n","import React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport CustomInput from \"./CustomInput\";\n\nwindow.Date.prototype.isValid = function() {\n  // An invalid date object returns NaN for getTime() and NaN is the only\n  // object not strictly equal to itself.\n  // eslint-disable-next-line\n  return this.getTime() === this.getTime();\n};\n\nconst ColumnFilter = ({ column: { filterValue, setFilter, filter } }) => {\n  return (\n    <CustomInput\n      value={filterValue || \"\"}\n      onChange={e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${filter ? filter : \"\"}...`}\n    />\n  );\n};\n\n/**\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react table has data that consist of an array of JSONs\n */\nconst ReactTable = ({ columns, data }) => {\n  // functions to run when a column is filtered depending on the type\n  const filterTypes = {\n    year: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined &&\n          Number(filterValue) &&\n          new Date(rowValue) &&\n          new Date(rowValue).isValid()\n          ? new Date(rowValue).getFullYear() === Number(filterValue)\n          : true;\n      });\n    },\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined\n          ? String(rowValue)\n              .toLowerCase()\n              .startsWith(String(filterValue).toLowerCase())\n          : true;\n      });\n    }\n  };\n  const defaultColumn = {\n    // Let's set up our default Filter UI\n    Filter: ColumnFilter\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes\n    },\n    // hook for filters\n    useFilters,\n    // hook for sorting\n    useSortBy\n  );\n  // console.log(defaultColumn);\n  return (\n    <Container>\n      <Table\n        responsive=\"md\"\n        striped\n        bordered\n        hover\n        size=\"sm\"\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => {\n                // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n                const {\n                  render,\n                  getHeaderProps,\n                  isSorted,\n                  isSortedDesc,\n                  getSortByToggleProps,\n                  // filter,\n                  canFilter\n                } = column;\n                const extraClass = isSorted\n                  ? isSortedDesc\n                    ? \"desc\"\n                    : \"asc\"\n                  : \"\";\n                return (\n                  <th\n                    key={`th-${i}`}\n                    className={extraClass}\n                    // getHeaderProps now receives a function\n                  >\n                    <div {...getHeaderProps(getSortByToggleProps())}>\n                      {render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>{canFilter ? render(\"Filter\") : null}</div>\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default ReactTable;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../actions/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { orderFilterURL } from \"../../../constants\";\nimport { useFormik, Field } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport Card from \"react-bootstrap/Card\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport Result from \"./testTable\";\n\nconst Manage = () => {\n  const [orders, setOrders] = useState(null);\n\n  const [startDate, setStartDate] = useState(\n    setHours(setMinutes(new Date(), 0), 0)\n  );\n  const [endDate, setEndDate] = useState(\n    setHours(setMinutes(new Date(), 59), 23)\n  );\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const fetchOrders = e => {\n    // e.preventDefault();\n    const endingtDate = endDate === undefined ? null : endDate;\n    const staringtDate = startDate === undefined ? null : startDate;\n    // console.log(endingtDate, staringtDate);\n    // console.log(staringtDate);\n    authAxios\n      .get(orderFilterURL, {\n        params: {\n          staringtDate,\n          endingtDate\n        }\n      })\n      .then(res => {\n        setOrders(res.data);\n      })\n      .catch(err => {});\n  };\n\n  const columns = [\n    {\n      Header: \"ID\",\n      accessor: \"id\",\n      Cell: e => <a href={`order/${e.value}`}> {e.value} </a>\n    },\n    {\n      Header: \"Customer\",\n      accessor: \"customer_name\"\n    },\n    {\n      Header: \"Area\",\n      accessor: \"area_name\"\n    },\n\n    {\n      Header: \"Status\",\n      accessor: \"orderStatus\"\n      //   getProps: (state, rowInfo, column) => {\n      //     return {\n      //       style: {\n      //         color:\n      //           rowInfo && rowInfo.row.orderStatus !== \"Pending\" ? \"red\" : null\n      //       }\n      //     };\n      //   }\n    },\n    {\n      Header: \"Date\",\n      accessor: \"start_date\"\n    },\n\n    {\n      Header: \"Mobile\",\n      accessor: \"mobile_number\"\n    },\n    {\n      Header: \"Mode of payment\",\n      accessor: \"mode_of_payment\"\n    }\n  ];\n  // console.log(orders);\n\n  return (\n    <div>\n      <section className=\"register-page section-b-space\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h4>Find Orders</h4>\n              <div className=\"theme-card\">\n                <div className=\"checkout-page\">\n                  <div className=\"checkout-form\">\n                    <div className=\"row check-out\"></div>\n                    <br></br>\n                    <div ClassName=\"form-inline\">\n                      <div className=\"row check-out\">\n                        <div className=\"form-group col-md-8 col-sm-8 col-xs-8\">\n                          <DatePicker\n                            selected={startDate}\n                            selectsStart\n                            // onChange={handleChangeStartDate}\n                            onChange={date => setStartDate(date)}\n                            dateFormat=\"dd/MMM/yy\"\n                            // showTimeSelect\n                            popperModifiers={{\n                              preventOverflow: {\n                                enabled: true\n                              }\n                            }}\n                            timeFormat=\"HH:mm\"\n                            injectTimes={[\n                              setHours(setMinutes(new Date(), 1), 0),\n                              setHours(setMinutes(new Date(), 5), 12),\n                              setHours(setMinutes(new Date(), 59), 23)\n                            ]}\n                          />\n                        </div>\n                        <div className=\"form-group col-md-8 col-sm-8 col-xs-8\">\n                          <DatePicker\n                            selected={endDate}\n                            popperModifiers={{\n                              preventOverflow: {\n                                enabled: true\n                              }\n                            }}\n                            // onChange={handleChangeEndtDate}\n                            onChange={date => setEndDate(date)}\n                            // showTimeSelect\n                            dateFormat=\"dd/MMM/yy\"\n                            timeFormat=\"HH:mm\"\n                            injectTimes={[\n                              setHours(setMinutes(new Date(), 1), 0),\n                              setHours(setMinutes(new Date(), 5), 12),\n                              setHours(setMinutes(new Date(), 59), 23)\n                            ]}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <br></br>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"search\"\n                      onClick={fetchOrders}\n                      required=\"\"\n                    />\n                  </div>\n                </div>\n                <br></br>\n                {orders ? (\n                  <div>\n                    <Card\n                      bg={\"secondary\"}\n                      style={{ width: \"18rem\" }}\n                      className=\"mb-2\"\n                      text={\"light\"}\n                    >\n                      {/* <Card.Header>Order for today</Card.Header> */}\n                      <Card.Body>\n                        <Card.Title> {orders.length} Orders </Card.Title>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {orders ? <Result data={orders} columns={columns} /> : null}\n    </div>\n  );\n};\n\nexport default Manage;\n"],"sourceRoot":""}