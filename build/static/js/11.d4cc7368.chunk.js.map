{"version":3,"sources":["components/ld/career/register.jsx"],"names":["connect","state","currentUser","user","userID","props","_useState","useState","_useState2","Object","_Users_swalihvpm_Desktop_django_react_ftest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setSaving","formik","useFormik","initialValues","applicant","name","phone_number","address","education","experience","onSubmit","values","console","log","undefined","authAxios","post","candidateAddURL","then","res","catch","err","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","handleSubmit","htmlFor","id","type","onChange","handleChange","value","placeholder","required"],"mappings":"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","file":"static/js/11.d4cc7368.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../actions/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { candidateAddURL } from \"../../../constants\";\nimport { useFormik, Field } from \"formik\";\n\nconst Register = props => {\n  const [saving, setSaving] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      applicant: props.currentUser,\n      name: \"\",\n      phone_number: \"\",\n      address: \"\",\n      education: \"\",\n      experience: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n      const applicant = props.currentUser;\n      const name = values[\"name\"] === undefined ? null : values[\"name\"];\n      const phone_number =\n        values[\"phone_number\"] === undefined ? null : values[\"phone_number\"];\n      const education =\n        values[\"education\"] === undefined ? null : values[\"education\"];\n      const experience =\n        values[\"experience\"] === undefined ? null : values[\"experience\"];\n      const address =\n        values[\"address\"] === undefined ? null : values[\"address\"];\n\n      setSaving(true);\n      authAxios\n        .post(candidateAddURL, {\n          applicant: applicant,\n          name: name,\n          phone_number: phone_number,\n          education: education,\n          experience: experience,\n          address: address\n        })\n        .then(res => {\n          setSaving(false);\n        })\n        .catch(err => {\n          // this.setState({ loading: false, error: err });\n        });\n    }\n  });\n\n  // console.log(props.currentUser);\n\n  return (\n    <div>\n      <section className=\"register-page section-b-space\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h3>Work with us</h3>\n              <div className=\"theme-card\">\n                <form className=\"theme-form\" onSubmit={formik.handleSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"email\">Your Name</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.name}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"review\">Phone Number</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"phonenumber\"\n                        name=\"phone_number\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.phone_number}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"email\">Experience</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"experience\"\n                        name=\"experience\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.experience}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"email\">Education</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"education\"\n                        name=\"education\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.education}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"review\">Address</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"address\"\n                        name=\"address\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.address}\n                      />\n                      <br></br>\n                    </div>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"Submit\"\n                      required=\"\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.user.userID\n  };\n};\n\nexport default connect(mapStateToProps)(Register);\n"],"sourceRoot":""}