{"version":3,"sources":["components/ld/manageOrders/CustomInput.jsx","components/ld/manageOrders/testTable.jsx","components/ld/manageOrders/deliverySearchForm.jsx","components/ld/manageOrders/tableIndex.jsx"],"names":["CustomInput","props","placeholder","name","value","_props$onChange","onChange","react_default","a","createElement","Form","Group","Control","window","Date","prototype","isValid","this","getTime","ColumnFilter","_ref","_ref$column","column","filterValue","setFilter","filter","e","target","undefined","concat","ReactTable","_ref2","columns","data","filterTypes","year","rows","id","row","rowValue","values","Number","getFullYear","text","String","toLowerCase","startsWith","defaultColumn","Filter","_useTable","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","Container","Table","Object","assign","responsive","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","i","render","getHeaderProps","isSorted","isSortedDesc","getSortByToggleProps","canFilter","extraClass","key","className","getRowProps","cells","cell","getCellProps","FORM","styled","div","_templateObject","PageWrapper","_templateObject2","Manage","_useState","useState","_useState2","slicedToArray","orders","setOrders","_useState3","_useState4","loading","setloading","_useState5","_useState6","place","setPlace","_useState7","setHours","setMinutes","_useState8","startDate","setStartDate","_useState9","_useState10","endDate","setEndDate","fetchOrders","endingtDate","staringtDate","authAxios","get","orderFilterURL","params","then","res","catch","err","toast","error","Header","accessor","Cell","cellInfo","Link","to","lib","loader","utils","style","marginLeft","marginRight","onSubmit","type","disabled","selected","places","index","selectsStart","date","popperModifiers","preventOverflow","enabled","dateFormat","onFocus","readOnly","timeFormat","injectTimes","onClick","Fragment","Card","bg","width","Body","Title","order","order_status","length","padding","testTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchServieArea","setState","serviceAreaURL","message","state","deliverySearchForm","Component","connect","user","token","auth","dispatch","fetchUserType","fetchUser"],"mappings":"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","file":"static/js/20.b8541971.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default props => {\n  let { placeholder, name, value, onChange = () => null } = props;\n  return (\n    // <div class=\"col-lg\">\n    <Form.Group>\n      <Form.Control\n        placeholder={placeholder}\n        name={name}\n        value={value ? value : \"\"}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n};\n","import React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport CustomInput from \"./CustomInput\";\n\nwindow.Date.prototype.isValid = function() {\n  // An invalid date object returns NaN for getTime() and NaN is the only\n  // object not strictly equal to itself.\n  // eslint-disable-next-line\n  return this.getTime() === this.getTime();\n};\n\nconst ColumnFilter = ({ column: { filterValue, setFilter, filter } }) => {\n  return (\n    <CustomInput\n      value={filterValue || \"\"}\n      onChange={e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${filter ? filter : \"\"}...`}\n    />\n  );\n};\n\nconst ReactTable = ({ columns, data }) => {\n  // functions to run when a column is filtered depending on the type\n  const filterTypes = {\n    year: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined &&\n          Number(filterValue) &&\n          new Date(rowValue) &&\n          new Date(rowValue).isValid()\n          ? new Date(rowValue).getFullYear() === Number(filterValue)\n          : true;\n      });\n    },\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined\n          ? String(rowValue)\n              .toLowerCase()\n              .startsWith(String(filterValue).toLowerCase())\n          : true;\n      });\n    }\n  };\n  const defaultColumn = {\n    // Let's set up our default Filter UI\n    Filter: ColumnFilter\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes\n    },\n    // hook for filters\n    useFilters,\n    // hook for sorting\n    useSortBy\n  );\n  // console.log(defaultColumn);\n  return (\n    <Container>\n      <Table\n        responsive=\"md\"\n        striped\n        bordered\n        hover\n        size=\"sm\"\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => {\n                // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n                const {\n                  render,\n                  getHeaderProps,\n                  isSorted,\n                  isSortedDesc,\n                  getSortByToggleProps,\n                  // filter,\n                  canFilter\n                } = column;\n                const extraClass = isSorted\n                  ? isSortedDesc\n                    ? \"desc\"\n                    : \"asc\"\n                  : \"\";\n                return (\n                  <th\n                    key={`th-${i}`}\n                    className={extraClass}\n                    // getHeaderProps now receives a function\n                  >\n                    <div {...getHeaderProps(getSortByToggleProps())}>\n                      {render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>{canFilter ? render(\"Filter\") : null}</div>\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default ReactTable;\n","import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { authSignup } from \"../../../actions/auth\";\nimport { Link } from \"react-router-dom\";\n// import Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { orderFilterURL } from \"../../../constants\";\n// import { useFormik, Field } from \"formik\";\n// import * as Yup from \"yup\";\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport Card from \"react-bootstrap/Card\";\n// import Result from \"./orderList\";\nimport Result from \"./testTable\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { PageLoader } from \"../common/loader\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Container,\n  StyledCard,\n  Button,\n  StyledSelect,\n  StyledDatePicker\n} from \"../styled/utils\";\nimport styled from \"styled-components\";\n\nconst FORM = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PageWrapper = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Manage = props => {\n  const [orders, setOrders] = useState(null);\n  const [loading, setloading] = useState(false);\n  const [place, setPlace] = useState(\"\");\n\n  const [startDate, setStartDate] = useState(\n    setHours(setMinutes(new Date(), 0), 0)\n  );\n  const [endDate, setEndDate] = useState(\n    setHours(setMinutes(new Date(), 59), 23)\n  );\n\n  const selectPlace = e => {\n    // console.log(e.target.value);\n    setPlace(e.target.value);\n  };\n\n  const fetchOrders = () => {\n    // console.log(\"submitting\");\n    // const place = values[\"place\"] === undefined ? null : values[\"place\"];\n    // const place = place === undefined ? null : place;\n    const endingtDate = endDate === undefined ? null : endDate;\n    const staringtDate = startDate === undefined ? null : startDate;\n    //   const place = values[\"place\"];\n    // console.log(place);\n\n    if (place !== \"\") {\n      setloading(true);\n      authAxios\n        .get(orderFilterURL, {\n          params: {\n            place,\n            staringtDate,\n            endingtDate\n          }\n        })\n        .then(res => {\n          setOrders(res.data);\n          setloading(false);\n        })\n        .catch(err => {\n          setloading(false);\n          toast.error(\"error occured\");\n        });\n    } else {\n      toast.error(\"Please select a place\");\n    }\n  };\n\n  //   const handleChangeStartDate = date => setStartDate(date);\n  //   const handleChangeEndtDate = date => setEndDate(date);\n\n  const columns = [\n    {\n      Header: \"ID\",\n      accessor: \"id\",\n      // Cell: e => <a href={`order/${e.value}`}> {e.value} </a>\n\n      Cell: cellInfo => (\n        <Link\n          to={`staff-order/${cellInfo.value}`}\n          // id={cellInfo.row.linkName}\n        >\n          {cellInfo.value}\n        </Link>\n      )\n    },\n    {\n      Header: \"Area\",\n      accessor: \"area_name\"\n    },\n    {\n      Header: \"Shop\",\n      accessor: \"shop_name\"\n    },\n    {\n      Header: \"Status\",\n      accessor: \"orderStatus\"\n    },\n    {\n      Header: \"Date\",\n      accessor: \"start_date\"\n    },\n    {\n      Header: \"Customer\",\n      accessor: \"customer_name\"\n    },\n    {\n      Header: \"Mobile\",\n      accessor: \"mobile_number\"\n    }\n  ];\n\n  // const staringtDate =\n  //   console.log(props.places);\n\n  return (\n    <PageWrapper>\n      <ToastContainer />\n      {loading && <PageLoader />}\n      <StyledCard style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n        <FORM onSubmit={fetchOrders}>\n          <StyledSelect\n            id=\"place\"\n            name=\"place\"\n            type=\"text\"\n            onChange={selectPlace}\n            value={place}\n          >\n            <option value=\"\" disabled selected>\n              Select your place\n            </option>\n            {props.places.map((a, index) => (\n              <option key={index}>{a}</option>\n            ))}\n          </StyledSelect>\n\n          <StyledDatePicker\n            selected={startDate}\n            selectsStart\n            onChange={date => setStartDate(date)}\n            popperModifiers={{\n              preventOverflow: {\n                enabled: true\n              }\n            }}\n            dateFormat=\"dd/MMM/yy\"\n            onFocus={e => (e.target.readOnly = true)}\n            timeFormat=\"HH:mm\"\n            injectTimes={[\n              setHours(setMinutes(new Date(), 1), 0),\n              setHours(setMinutes(new Date(), 5), 12),\n              setHours(setMinutes(new Date(), 59), 23)\n            ]}\n          />\n\n          <StyledDatePicker\n            selected={endDate}\n            onChange={date => setEndDate(date)}\n            popperModifiers={{\n              preventOverflow: {\n                enabled: true\n              }\n            }}\n            // showTimeSelect\n            onFocus={e => (e.target.readOnly = true)}\n            dateFormat=\"dd/MMM/yy\"\n            timeFormat=\"HH:mm\"\n            injectTimes={[\n              setHours(setMinutes(new Date(), 1), 0),\n              setHours(setMinutes(new Date(), 5), 12),\n              setHours(setMinutes(new Date(), 59), 23)\n            ]}\n          />\n          <Button onClick={fetchOrders}> Submit</Button>\n        </FORM>\n      </StyledCard>\n\n      {orders ? (\n        <>\n          <Card\n            bg={\"danger\"}\n            style={{ width: \"18rem\" }}\n            className=\"mb-2\"\n            text={\"light\"}\n          >\n            <Card.Body>\n              <Card.Title>\n                {\" \"}\n                {orders.filter(order => order.order_status === 1).length}{\" \"}\n                Pending Orders{\" \"}\n              </Card.Title>\n            </Card.Body>\n          </Card>\n          <Card\n            bg={\"success\"}\n            style={{ width: \"18rem\" }}\n            className=\"mb-2\"\n            text={\"light\"}\n          >\n            <Card.Body>\n              <Card.Title> {orders.length} Total Orders </Card.Title>\n            </Card.Body>\n          </Card>\n        </>\n      ) : null}\n\n      {orders ? (\n        <StyledCard style={{ padding: \"5px\" }}>\n          <Result data={orders} columns={columns} />\n        </StyledCard>\n      ) : null}\n    </PageWrapper>\n  );\n};\n\nexport default Manage;\n","import React, { Component } from \"react\";\n// import { Link, Redirect } from \"react-router-dom\";\n// import Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import Form from \"./tableSearchForm\";\nimport Form from \"./deliverySearchForm\";\nimport { serviceAreaURL } from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\nimport { fetchUser } from \"../../../actions/user\";\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: null,\n      loading: false,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    // this.props.fetchUserType();\n    this.fetchServieArea();\n  }\n\n  fetchServieArea = () => {\n    this.setState({ loading: true }, () => {\n      authAxios\n        .get(serviceAreaURL)\n        .then(res => {\n          this.setState({\n            data: res.data[0]\n          });\n          this.setState({\n            places: res.data[0].places\n          });\n        })\n        .catch(err => {\n          this.setState({\n            error: err.message,\n            loading: false\n          });\n        });\n    });\n  };\n\n  render() {\n    const { places } = this.state;\n    // const { userType, token } = this.props;\n    // console.log(places);\n\n    return <div>{places && <Form places={places} />}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserType: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Manage);\n"],"sourceRoot":""}