{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ld/products/productCategory.jsx","components/ld/products/productCard.jsx","components/ld/products/productList.jsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","ProductCategory","handleChangeCategory","cat","_this","props","window","scrollTo","_this2","this","ShopProductCategory","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","loading","className","href","onClick","e","handleClearCategory","Fragment","map","index","key","id","name","Component","ProductCard","state","display","handleViewVariationDisply","setState","item","react_default","Card","border","v_is_available","Header","Row","Col","xs","title_local","title","item_stock","stock_count","stock_of_varitations","item_in_order","order_of_varitations","ListGroup","style","variant","variations","v","Item","check_in_order","Link","to","concat","process","Button","size","ProductList","products","categories","show","limit","offset","query","hasMore","outOfStock","handleOutofStock","target","checked","fetchFreshProducts","fetchProducts","_this$state","owner","user","authAxios","get","ShopProductInfinitURL","params","then","res","newProducts","data","has_more","toConsumableArray","catch","err","error","_this$state2","handleClick","history","push","fetchProductCategory","ownerID","ShopProductCategoryURL","_this$state3","token","Container","color","productCategory","Form","Check","onChange","type","label","bg","text","as","productCard","Redirect","connect","cartItems","cart","shoppingCart","auth"],"mappings":"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","file":"static/js/22.9a6db281.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from \"react\";\n\nclass ProductCategory extends Component {\n  handleChangeCategory = cat => {\n    this.props.handleChangeCategory(cat);\n    window.scrollTo(0, 1300);\n  };\n\n  render() {\n    const { ShopProductCategory } = this.props;\n    // console.log(ShopProductCategory);\n    return (\n      <div>\n        {/*Category Three*/}\n        {this.props.loading ? (\n          <div className=\"loading-cls\"></div>\n        ) : (\n          <div className=\"container category-button\">\n            <section className=\"section-b-space\">\n              <div className=\"row partition1\">\n                <div className=\"col\">\n                  <a\n                    href={null}\n                    onClick={e => this.props.handleClearCategory(e)}\n                    className=\"btn btn-outline btn-block\"\n                  >\n                    All Products\n                  </a>\n                </div>\n                {ShopProductCategory && (\n                  <React.Fragment>\n                    {ShopProductCategory.map((cat, index) => (\n                      <div key={index} className=\"col\">\n                        <a\n                          href={null}\n                          // onClick={this.props.handleChangeCategory(cat.name)}\n                          className=\"btn btn-outline btn-block\"\n                          onClick={() => this.handleChangeCategory(cat.id)}\n                        >\n                          {cat.name}\n                        </a>\n                      </div>\n                    ))}\n                  </React.Fragment>\n                )}\n              </div>\n            </section>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProductCategory;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListGroup, Card, Button, Col, Container, Row } from \"react-bootstrap\";\n\nclass ProductCard extends Component {\n  state = {\n    display: false\n  };\n  handleViewVariationDisply = () => {\n    this.setState({ display: !this.state.display });\n  };\n  render() {\n    const { item } = this.props;\n    // console.log(123);\n\n    return (\n      <div>\n        {this.props.loading ? (\n          <div className=\"loading-cls\"></div>\n        ) : (\n          <Card\n            border={item.v_is_available ? \"success\" : \"danger\"}\n            // style={{ width: \"20rem\" }}\n            onClick={() => {\n              this.handleViewVariationDisply();\n            }}\n          >\n            <Card.Header>\n              <Row>\n                <Col xs={6}>\n                  {item.title_local ? item.title_local : item.title}\n                </Col>\n                <Col xs={3}>\n                  {item.item_stock\n                    ? item.stock_count\n                    : item.stock_of_varitations}\n                </Col>\n                <Col xs={3}>\n                  {item.item_stock\n                    ? item.item_in_order\n                    : item.order_of_varitations}\n                </Col>\n              </Row>\n            </Card.Header>\n            <ListGroup\n              style={{ display: this.state.display ? \"\" : \"none\" }}\n              variant=\"flush\"\n            >\n              {item.variations.map((v, index) => {\n                return (\n                  <ListGroup.Item\n                    key={index}\n                    variant={v.stock_count > 0 ? \"success\" : \"danger\"}\n                  >\n                    <Row>\n                      <Col xs={6}>{v.name} </Col>\n                      <Col xs={3}>\n                        {item.item_stock ? item.stock_count : v.stock_count}\n                      </Col>\n                      <Col xs={3}>\n                        {item.item_stock\n                          ? item.item_in_order\n                          : v.check_in_order}\n                      </Col>\n                    </Row>\n                    {/* {item.name} Stock: */}\n                    {/* {item.stock_count > 0 ? item.stock_count : \"Out of stock\"} */}\n                  </ListGroup.Item>\n                );\n              })}\n              <ListGroup.Item>\n                {/* <Card.Link\n                to={`${process.env.PUBLIC_URL}/shop-product-detail/${item.id}`}\n              >\n                View More\n              </Card.Link> */}\n                <Link\n                  to={`${process.env.PUBLIC_URL}/shop-product-detail/${item.id}`}\n                >\n                  <Button variant=\"outline-primary\" size=\"sm\">\n                    View More\n                  </Button>\n                </Link>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        )}\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default ProductCard;\n","import React, { Component } from \"react\";\n// import { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import Breadcrumb from \"../common/breadcrumb\";\nimport {\n  ShopProductCategoryURL,\n  ShopProductInfinitURL\n} from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\n// import { Modal, Button, Container } from \"react-bootstrap\";\n// import { faEdit, faSleigh } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import { ToastContainer, toast } from \"react-toastify\";\nimport { Form, Row, Col, Container, Card } from \"react-bootstrap\";\n\nimport Productcategory from \"./productCategory\";\nimport ProductCard from \"./productCard\";\n\nclass ProductList extends Component {\n  state = {\n    products: [],\n    categories: [],\n    show: false,\n    loading: false,\n    limit: 20,\n    offset: 0,\n    query: \"all\",\n    hasMore: false,\n    outOfStock: false\n  };\n\n  componentDidMount() {\n    this.fetchProductCategory();\n    this.fetchFreshProducts();\n  }\n\n  handleOutofStock = e => {\n    this.setState({\n      outOfStock: e.target.checked\n    });\n  };\n\n  handleChangeCategory = cat => {\n    // console.log(cat);\n    this.setState({ offset: 0, query: cat, hasMore: true }, () => {\n      this.fetchFreshProducts();\n    });\n  };\n\n  handleClearCategory = () => {\n    // window.scrollTo(0, 1300);\n    this.setState({ offset: 0, query: \"all\", hasMore: true }, () => {\n      this.fetchFreshProducts();\n    });\n  };\n\n  fetchProducts = () => {\n    this.setState({ loading: true });\n    const { limit, offset, query, outOfStock } = this.state;\n    const owner = this.props.user.user.id;\n    authAxios\n      .get(ShopProductInfinitURL, {\n        params: {\n          limit,\n          offset,\n          query,\n          owner,\n          outOfStock\n        }\n      })\n      .then(res => {\n        const newProducts = res.data.products;\n        const hasMore = res.data.has_more;\n        this.setState({\n          hasMore: hasMore,\n          loading: false,\n          products: [...this.state.products, ...newProducts],\n          offset: offset + limit\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  fetchFreshProducts = () => {\n    this.setState({ loading: true });\n    const { limit, offset, query, outOfStock } = this.state;\n    const owner = this.props.user.user.id;\n    authAxios\n      .get(ShopProductInfinitURL, {\n        params: {\n          limit,\n          offset,\n          query,\n          owner,\n          outOfStock\n        }\n      })\n      .then(res => {\n        this.setState({\n          // products: res.data\n          loading: false,\n          hasMore: res.data.has_more,\n          products: res.data.products,\n          offset: offset + limit\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleClick = id => {\n    this.props.history.push(\"/shop-product-detail\");\n  };\n\n  fetchProductCategory = () => {\n    // const ownerID = this.props.userID;\n    const ownerID = this.props.user.user.id;\n    // console.log(ownerID);\n    this.setState({ loading: true });\n    authAxios\n      .get(ShopProductCategoryURL(ownerID))\n      .then(res => {\n        this.setState({ categories: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  render() {\n    const { products, categories, hasMore } = this.state;\n    // console.log(products);\n\n    if (!this.props.token) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        {this.state.loading ? <div className=\"loading-cls\"></div> : null}\n        <Container>\n          {/* <ToastContainer /> */}\n          <div className=\"account-sidebar\">\n            <Link style={{ color: \"#FFF\" }} to={`/add-shop-product`}>\n              Add a product\n            </Link>\n          </div>\n\n          {this.state.loading && <div className=\"loading-cls\"></div>}\n          {categories.length > 1 ? (\n            <Productcategory\n              handleClearCategory={this.handleClearCategory}\n              handleChangeCategory={this.handleChangeCategory}\n              ShopProductCategory={categories}\n              loading={this.state.loading}\n            />\n          ) : null}\n\n          <Form>\n            <div className=\"mb-3\">\n              <Form.Check\n                onChange={this.handleOutofStock}\n                checked={this.state.outOfStock}\n                type=\"checkbox\"\n                label=\"Search only out of stock\"\n              />\n            </div>\n          </Form>\n          {/* <Container> */}\n          {products.length > 0 ? (\n            <div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <Card bg={\"secondary\"} text={\"light\"}>\n                    <Card.Header as=\"h4\">\n                      <Row>\n                        <Col xs={4}>Product</Col>\n                        <Col xs={4}> Stock </Col>\n                        <Col xs={4}>Orders</Col>\n                      </Row>\n                    </Card.Header>\n                  </Card>\n                </div>\n              </div>\n              <br></br>\n\n              {products.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <ProductCard\n                        item={item}\n                        fetchProducts={this.fetchProducts}\n                        hasMore={hasMore}\n                        loading={this.state.loading}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n              {this.loading ? (\n                <div className=\"row\">\n                  <div className=\"loading-cls\"></div>\n                </div>\n              ) : (\n                <React.Fragment>\n                  <div className=\"row\">\n                    <Col>\n                      {hasMore ? (\n                        <p\n                          onClick={this.fetchProducts}\n                          className=\"seen-cls seen-it-cls\"\n                        >\n                          <b>Load More</b>\n                        </p>\n                      ) : (\n                        <p className=\"seen-cls seen-it-cls\">\n                          <b>No more products</b>\n                        </p>\n                      )}\n                    </Col>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          ) : (\n            <div>No products</div>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  cartItems: state.cart.shoppingCart,\n  user: state.user,\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps)(ProductList);\n\n// handleShow = () => {\n//   this.setState({ show: true });\n// };\n// handleClose = () => {\n//   this.setState({ show: false });\n// };\n"],"sourceRoot":""}