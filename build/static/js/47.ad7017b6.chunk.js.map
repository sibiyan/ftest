{"version":3,"sources":["components/ld/checkout/or.jsx"],"names":["OrderSummary","state","quantity","error","handleFetchOrder","_this","setState","loading","authAxios","get","orderSummaryURL","then","res","cartItems","data","catch","err","response","status","handleAddToCart2","id","shop","variation","console","log","post","addToCartURL","props","refreshCart","toast","handleRemoveQuantityFromCart","q","orderItemUpdateQuantityURL","handleRemoveItemFromCart","delete","orderItemDeleteURL","hanldeDeleteOrder","orderDeleteURL","clearKart","this","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_toastify__WEBPACK_IMPORTED_MODULE_15__","className","Fragment","order_items","scope","map","item","index","key","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","src","concat","localhost","item_image","alt","itemLocalName","vname","itemName","final_price","type","onClick","item_variation","data-type","data-field","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_14__","icon","faMinus","size","color","length","name","value","onChange","testOnchange","faPlus","faTrashAlt","total","process","shop_id","Component","connect","cart","shoppingCart","dispatch","fetchCart"],"mappings":"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","file":"static/js/47.ad7017b6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { Table, Row, Col, Container } from \"react-bootstrap\";\n\nimport {\n  orderSummaryURL,\n  addToCartURL,\n  orderItemUpdateQuantityURL,\n  localhost,\n  orderItemDeleteURL,\n  orderDeleteURL\n} from \"../../../constants\";\nimport { fetchCart, clearKart } from \"../../../actions/cart\";\nimport { authAxios } from \"../../../authAxios\";\nimport {\n  faMinus,\n  faPlus,\n  faTrashAlt,\n  faAngleRight,\n  faAngleLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass OrderSummary extends Component {\n  state = {\n    // cartItems: null,\n    quantity: 1,\n    error: null\n  };\n\n  componentDidMount() {\n    // this.handleFetchOrder();\n    this.props.refreshCart();\n  }\n\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ cartItems: res.data, loading: false });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            error: \"You currently do not have an order\",\n            loading: false\n          });\n        } else {\n          this.setState({ error: err, loading: false });\n        }\n      });\n  };\n\n  handleAddToCart2 = (id, shop, variation) => {\n    console.log(id, shop, variation);\n    this.setState({ loading: true });\n    authAxios\n      .post(addToCartURL, { id, shop, variation })\n      .then(res => {\n        // this.handleFetchOrder();\n        this.props.refreshCart();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n        toast.error(\"Oops there was an error\");\n      });\n  };\n\n  handleRemoveQuantityFromCart = (id, q) => {\n    authAxios\n      .post(orderItemUpdateQuantityURL, { id })\n      .then(res => {\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleRemoveItemFromCart = id => {\n    authAxios\n      .delete(orderItemDeleteURL(id))\n      .then(res => {\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  hanldeDeleteOrder = id => {\n    console.log(id);\n    // console.log(\"delete\");\n    authAxios\n      .delete(orderDeleteURL(id))\n      .then(res => {\n        this.props.clearKart();\n        this.props.refreshCart();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  // testOnchange = () => {\n  //   // console.log(\"hi\");\n  // };\n\n  render() {\n    // const { cartItems } = this.state;\n    const { cartItems } = this.props;\n    // console.log(cartItems);\n\n    return (\n      <div>\n        <ToastContainer />\n        {this.state.loading ? (\n          <div className=\"loading-cls\"></div>\n        ) : (\n          <React.Fragment>\n            {cartItems && (\n              <React.Fragment>\n                {cartItems.order_items ? (\n                  <section className=\"cart-section section-b-space\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                          <table className=\"table cart-table table-responsive-xs\">\n                            <thead>\n                              <tr className=\"table-head\">\n                                <th scope=\"col\">Image</th>\n                                <th scope=\"col\">Detial</th>\n                                <th scope=\"col\">price</th>\n                                <th scope=\"col\">quantity</th>\n                                <th scope=\"col\">action</th>\n                                <th scope=\"col\">total</th>\n                              </tr>\n                            </thead>\n                            {/* {cartItems.map((item, index) => { */}\n                            {cartItems.order_items.map((item, index) => {\n                              return (\n                                <tbody key={index}>\n                                  <tr>\n                                    <td>\n                                      <Link to={\"\"}>\n                                        <img\n                                          src={`${localhost}${item.item_image}`}\n                                          alt=\"\"\n                                        />\n                                      </Link>\n                                    </td>\n                                    <td>\n                                      <Link to={\"\"}>\n                                        {item.itemLocalName ? (\n                                          <React.Fragment>\n                                            {item.itemLocalName} [{item.vname}]\n                                          </React.Fragment>\n                                        ) : (\n                                          <React.Fragment>\n                                            {item.itemName} [{item.vname}]\n                                          </React.Fragment>\n                                        )}\n\n                                        <p>\n                                          {\"Rs: \"}\n                                          {item.final_price}\n                                        </p>\n                                      </Link>\n                                      <div className=\"mobile-cart-content row\">\n                                        <div className=\"col-xs-4\">\n                                          <div className=\"qty-box\">\n                                            <div className=\"input-group\">\n                                              <span className=\"input-group-prepend\">\n                                                {item.quantity > 1 ? (\n                                                  <button\n                                                    type=\"button\"\n                                                    className=\"btn quantity-left-minus\"\n                                                    // onClick={this.minusQty}\n\n                                                    onClick={() =>\n                                                      this.handleRemoveQuantityFromCart(\n                                                        item.item_variation\n                                                      )\n                                                    }\n                                                    data-type=\"minus\"\n                                                    data-field=\"\"\n                                                  >\n                                                    {/* <i className=\"fa fa-angle-left\"></i> */}\n                                                    <FontAwesomeIcon\n                                                      icon={faMinus}\n                                                      size={\"lg\"}\n                                                      color={\"#ff4c3b\"}\n                                                    />\n                                                  </button>\n                                                ) : (\n                                                  <div>\n                                                    {cartItems.order_items\n                                                      .length < 2 ? (\n                                                      <button\n                                                        type=\"button\"\n                                                        className=\"btn quantity-left-minus\"\n                                                        // onClick={this.minusQty}\n                                                        onClick={() =>\n                                                          this.hanldeDeleteOrder(\n                                                            cartItems.id\n                                                          )\n                                                        }\n                                                        data-type=\"minus\"\n                                                        data-field=\"\"\n                                                      >\n                                                        <FontAwesomeIcon\n                                                          icon={faMinus}\n                                                          size={\"lg\"}\n                                                          color={\"#ff4c3b\"}\n                                                        />\n                                                      </button>\n                                                    ) : (\n                                                      // otherwise\n                                                      <button\n                                                        type=\"button\"\n                                                        className=\"btn quantity-left-minus\"\n                                                        // onClick={this.minusQty}\n                                                        onClick={() =>\n                                                          this.handleRemoveItemFromCart(\n                                                            item.id\n                                                          )\n                                                        }\n                                                        data-type=\"minus\"\n                                                        data-field=\"\"\n                                                      >\n                                                        <FontAwesomeIcon\n                                                          icon={faMinus}\n                                                          size={\"lg\"}\n                                                          color={\"#ff4c3b\"}\n                                                        />\n                                                      </button>\n                                                    )}\n                                                  </div>\n                                                )}\n                                              </span>\n                                              <input\n                                                type=\"text\"\n                                                name=\"quantity\"\n                                                value={item.quantity}\n                                                // defaultValue={0}\n                                                onChange={this.testOnchange}\n                                                // onChange={null}\n                                                className=\"form-control input-number\"\n                                              />\n                                              <span className=\"input-group-prepend\">\n                                                <button\n                                                  type=\"button\"\n                                                  className=\"btn quantity-right-plus\"\n                                                  // onClick={this.handleAddToCart2}\n                                                  onClick={() =>\n                                                    this.handleAddToCart2(\n                                                      item.item,\n                                                      item.shop,\n                                                      item.item_variation\n                                                    )\n                                                  }\n                                                  data-type=\"plus\"\n                                                  data-field=\"\"\n                                                >\n                                                  {/* <i className=\"fa fa-angle-right\"></i> */}\n                                                  <FontAwesomeIcon\n                                                    icon={faPlus}\n                                                    size={\"lg\"}\n                                                    color={\"#ff4c3b\"}\n                                                  />\n                                                </button>\n                                              </span>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div className=\"col-xs-4\">\n                                          <h2 className=\"td-color\">\n                                            {/* {symbol} */}\n                                            {/* {item.final_price} */}\n                                          </h2>\n                                        </div>\n                                        <div className=\"col-xs-4\">\n                                          <h2 className=\"td-color\">\n                                            <a\n                                              //   href=\"#\"\n                                              className=\"icon\"\n                                              onClick={() =>\n                                                this.handleRemoveItemFromCart(\n                                                  item.id\n                                                )\n                                              }\n                                            >\n                                              <FontAwesomeIcon\n                                                icon={faTrashAlt}\n                                                size={\"lg\"}\n                                              />\n                                            </a>\n                                          </h2>\n                                        </div>\n                                      </div>\n                                    </td>\n                                    <td>\n                                      <h4>{item.final_price}</h4>\n                                    </td>\n                                    <td>\n                                      <div className=\"qty-box\">\n                                        <div className=\"input-group\">\n                                          <span className=\"input-group-prepend\">\n                                            <button\n                                              type=\"button\"\n                                              className=\"btn quantity-left-minus\"\n                                              // onClick={this.minusQty}\n                                              onClick={() =>\n                                                this.handleRemoveQuantityFromCart(\n                                                  item.item.id\n                                                )\n                                              }\n                                              data-type=\"minus\"\n                                              data-field=\"\"\n                                            >\n                                              {/* <i className=\"fa fa-angle-left\"></i> */}\n                                              <FontAwesomeIcon\n                                                icon={faMinus}\n                                                size={\"lg\"}\n                                                color={\"#ff4c3b\"}\n                                              />\n                                            </button>\n                                          </span>\n                                          <input\n                                            type=\"text\"\n                                            name=\"quantity\"\n                                            value={item.quantity}\n                                            // onChange={this.changeQty}\n                                            // onChange={this.changeQty}\n                                            className=\"form-control input-number\"\n                                          />\n                                          <span className=\"input-group-prepend\">\n                                            <button\n                                              type=\"button\"\n                                              className=\"btn quantity-right-plus\"\n                                              // onClick={this.handleAddToCart2}\n                                              onClick={() =>\n                                                this.handleAddToCart2(\n                                                  item.item,\n                                                  item.shop,\n                                                  item.item_variation\n                                                )\n                                              }\n                                              data-type=\"plus\"\n                                              data-field=\"\"\n                                            >\n                                              {/* <i className=\"fa fa-angle-right\"></i> */}\n                                              <FontAwesomeIcon\n                                                icon={faPlus}\n                                                size={\"lg\"}\n                                                color={\"#ff4c3b\"}\n                                              />\n                                            </button>\n                                          </span>\n                                        </div>\n                                      </div>\n                                      {/* {item.qty >= item.stock ? \"out of Stock\" : \"\"} */}\n                                    </td>\n                                    <td>\n                                      <a\n                                        // href=\"#\"\n                                        className=\"icon\"\n                                        // onClick={() => this.props.removeFromCart(item)}\n                                        onClick={() =>\n                                          this.handleRemoveItemFromCart(item.id)\n                                        }\n                                      >\n                                        {/* <i className=\"fa fa-times\"></i> */}\n                                        <FontAwesomeIcon\n                                          icon={faTrashAlt}\n                                          size={\"lg\"}\n                                        />\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <h2 className=\"td-color\">\n                                        {/* {symbol} */}\n                                        {item.final_price}\n                                      </h2>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              );\n                            })}\n                          </table>\n                          <table className=\"table cart-table table-responsive-md\">\n                            <tfoot>\n                              <tr>\n                                <td>total price :</td>\n                                <td>\n                                  <h2>\n                                    {/* {symbol}  */}\n                                    {cartItems.total}{\" \"}\n                                  </h2>\n                                </td>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </div>\n                      </div>\n                      <div className=\"row cart-buttons\">\n                        <div className=\"col-6\">\n                          <Link\n                            // to={\"\"}\n                            to={`${process.env.PUBLIC_URL}/shops/${cartItems.shop_id}`}\n                            className=\"btn btn-solid\"\n                          >\n                            continue shopping\n                          </Link>\n                        </div>\n                        <div className=\"col-6\">\n                          <Link\n                            to={`${process.env.PUBLIC_URL}/checkout`}\n                            className=\"btn btn-solid\"\n                          >\n                            check out\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                ) : (\n                  <section className=\"cart-section section-b-space\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                          <div>\n                            <div className=\"col-sm-12 empty-cart-cls text-center\">\n                              <img\n                                src={`${process.env.PUBLIC_URL}/media/cart/icon-empty-cart.png`}\n                                className=\"img-fluid mb-4\"\n                                alt=\"\"\n                              />\n                              <h3>\n                                <strong>Your Cart is Empty</strong>\n                              </h3>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  cartItems: state.cart.shoppingCart\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart()),\n    clearKart: () => dispatch(clearKart)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderSummary);\n"],"sourceRoot":""}