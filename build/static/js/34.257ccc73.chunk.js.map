{"version":3,"sources":["components/ld/orders/order-item.jsx"],"names":["OrderItem","state","order","loading","ShopSuccess","CustomerSuccess","error","addressID","orderAddress","orderItems","orderID","shippingCharges","orderTotal","orderStatus","shopOrderStatus","staffOrderStatus","selectedOrderStatus","fetchOrderStatus","authAxios","get","orderStatusListURL","then","res","_this","setState","data","catch","err","fetchOrder","params","props","match","orderDetailURL","address","id","order_items","total","handleCallback","fetchAddress","orderAddressURL","orderCancelCustoemr","e","preventDefault","console","log","put","orderStatusUpdateURL","order_status","toast","handleChangeOrderStatus","status","updateOrderStatus","success","_this2","this","filter","setTimeout","user","is_shop_owner","orderStatusShop","is_staff_user","orderStatusStaff","can_update_by","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","react_toastify__WEBPACK_IMPORTED_MODULE_12__","_common_breadcrumb__WEBPACK_IMPORTED_MODULE_7__","title","className","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","variant","onSubmit","react_select__WEBPACK_IMPORTED_MODULE_10__","onChange","getOptionLabel","option","concat","name","getOptionValue","options","onInputChange","handleInputChange","placeholder","menuIsOpen","menuOpen","type","required","shop_name","start_date","mode_of_payment","Fragment","is_customer","size","onClick","PlaceName","areaName","full_address","districtName","vilalgeName","href","phone_number","map","item","index","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_16__","xs","itemLocalName","itemName","vname","quantity","final_price","Component","connect"],"mappings":"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","file":"static/js/34.257ccc73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\n// import axios from \"axios\";\nimport { authAxios } from \"../../../authAxios\";\n// import { fetchUser } from \"../../../actions/user\";\nimport Select from \"react-select\";\nimport { Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport {\n  orderDetailURL,\n  orderAddressURL,\n  orderStatusUpdateURL,\n  orderStatusListURL\n} from \"../../../constants\";\n\nclass OrderItem extends Component {\n  state = {\n    order: [],\n    loading: false,\n    ShopSuccess: false,\n    CustomerSuccess: false,\n    error: null,\n    addressID: null,\n    orderAddress: [],\n    orderItems: [],\n    orderID: null,\n    shippingCharges: 25,\n    orderTotal: null,\n    orderStatus: [],\n    shopOrderStatus: [],\n    staffOrderStatus: [],\n    selectedOrderStatus: null\n  };\n\n  componentWillMount() {\n    this.fetchOrder();\n    this.fetchOrderStatus();\n    // this.props.fetchUserType();\n    this.filter();\n    setTimeout(() => {\n      this.filter();\n    }, 3000);\n  }\n\n  filter() {\n    if (this.props.user.user.is_shop_owner) {\n      this.orderStatusShop();\n    }\n    if (this.props.user.user.is_staff_user) {\n      this.orderStatusStaff();\n    }\n  }\n\n  orderStatusShop() {\n    const { orderStatus } = this.state;\n    this.setState({\n      shopOrderStatus: this.state.orderStatus.filter(\n        status => status.can_update_by === \"shop\"\n      )\n    });\n  }\n  orderStatusStaff() {\n    const { orderStatus } = this.state;\n    this.setState({\n      staffOrderStatus: this.state.orderStatus.filter(\n        status => status.can_update_by === \"staff\"\n      )\n    });\n  }\n\n  fetchOrderStatus = () => {\n    authAxios\n      .get(orderStatusListURL)\n      .then(res => {\n        // SetOrderStatus(res.data);\n        this.setState({ orderStatus: res.data });\n      })\n      .catch(err => {\n        this.setState({\n          // error: err.message,\n          loading: false\n        });\n      });\n    // });\n  };\n\n  fetchOrder = () => {\n    const {\n      match: { params }\n    } = this.props;\n\n    this.setState({ loading: true });\n    // const { shippingCharges } = this.state;\n    authAxios\n      .get(orderDetailURL(params.orderID))\n      .then(res => {\n        this.setState({\n          order: res.data,\n          loading: false,\n          addressID: res.data.address,\n          orderID: res.data.id,\n          orderItems: res.data.order_items,\n          orderTotal: res.data.total\n        });\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleCallback = () => {\n    this.fetchAddress();\n  };\n\n  fetchAddress = () => {\n    const { addressID } = this.state;\n    this.setState({ loading: true });\n    authAxios\n      .get(orderAddressURL(addressID))\n      .then(res => {\n        this.setState({ orderAddress: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  orderCancelCustoemr = e => {\n    e.preventDefault();\n    const { orderID } = this.state;\n    const selectedOrderStatus = 4;\n    console.log(selectedOrderStatus);\n    authAxios\n      .put(orderStatusUpdateURL(orderID), {\n        order_status: selectedOrderStatus\n      })\n      .then(res => {\n        toast.error(\"Order  cancelled\");\n        this.setState({ CustomerSuccess: true });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleChangeOrderStatus = status => {\n    this.setState({\n      selectedOrderStatus: status.id\n    });\n  };\n\n  updateOrderStatus = e => {\n    e.preventDefault();\n    const { orderID } = this.state;\n    const { selectedOrderStatus } = this.state;\n    authAxios\n      .put(orderStatusUpdateURL(orderID), {\n        order_status: selectedOrderStatus\n      })\n      .then(res => {\n        toast.success(\"Order status updated\");\n        this.setState({ success: true });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  // callbacktest = () => {\n  //   console.log(this.state.orderStatus);\n  // };\n\n  render() {\n    const { order, orderAddress, orderItems, success } = this.state;\n\n    const { user } = this.props;\n    // console.log(loading);\n\n    if (success) {\n      if (user.user.is_staff_user) {\n        return <Redirect to=\"/manage-order-delivery\" />;\n      } else if (user.user.is_shop_owner) {\n        return <Redirect to=\"/shop-order-table\" />;\n      } else {\n        return <Redirect to=\"/orders\" />;\n      }\n    }\n\n    return (\n      <div>\n        <ToastContainer />\n        <Breadcrumb title={\"Order Details\"} />\n        <section className=\"section-b-space\">\n          <div className=\"container padding-cls\">\n            <Link to={\"/shop-order-table\"}>\n              <Button variant=\"outline-danger\">Back to orders</Button>{\" \"}\n            </Link>\n\n            {/* {user.user.is_customer ? (\n              <div className=\"checkout-page\">\n                <form onSubmit={this.updateOrderStatus}>\n                  <div className=\"checkout-form\">\n                    <div className=\"row check-out\">\n                      <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                        <br></br>\n                        <div className=\"field-label\">Update order status</div>\n\n                        <Select\n                          className=\"mb-3\"\n                          onChange={this.handleChangeOrderStatus}\n                          getOptionLabel={option => `${option.name}`}\n                          getOptionValue={option => `${option}`}\n                          options={this.state.shopOrderStatus}\n                          onInputChange={this.handleInputChange}\n                          placeholder={\"Select order status\"}\n                          menuIsOpen={this.state.menuOpen}\n                        />\n                      </div>\n                    </div>\n                    <br></br>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"Submit\"\n                      required=\"\"\n                    />\n                  </div>\n                </form>\n                <br></br>\n              </div>\n            ) : (\n              \"\"\n            )} */}\n            {user.user.is_staff_user ? (\n              <div className=\"checkout-page\">\n                <form onSubmit={this.updateOrderStatus}>\n                  <div className=\"checkout-form\">\n                    <div className=\"row check-out\">\n                      <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                        <br></br>\n                        <div className=\"field-label\">Update order status</div>\n\n                        <Select\n                          className=\"mb-3\"\n                          onChange={this.handleChangeOrderStatus}\n                          getOptionLabel={option => `${option.name}`}\n                          getOptionValue={option => `${option}`}\n                          options={this.state.staffOrderStatus}\n                          onInputChange={this.handleInputChange}\n                          placeholder={\"Select order status\"}\n                          menuIsOpen={this.state.menuOpen}\n                        />\n                      </div>\n                    </div>\n                    <br></br>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"Update\"\n                      required=\"\"\n                    />\n                  </div>\n                </form>\n                <br></br>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"row\">\n              <div className=\"col-lg-9\">\n                <div className=\"dashboard-right\">\n                  <div className=\"dashboard\">\n                    <div className=\"box-account box-info\">\n                      <div className=\"box-head\">\n                        <h3>{order.shop_name}</h3>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <div className=\"box\">\n                            <div className=\"box-title\">\n                              <h4>Order No: {order.id}</h4>\n                            </div>\n                            <h6>Date: {order.start_date}</h6>\n                            <h6>Status: {order.orderStatus}</h6>\n                            <h6>Mod of Payment: {order.mode_of_payment}</h6>\n                          </div>\n\n                          {user.user && (\n                            <React.Fragment>\n                              {user.user.is_customer ? (\n                                <Button\n                                  type=\"submit\"\n                                  // variant=\"info\"\n                                  variant=\"outline-danger\"\n                                  size=\"sm\"\n                                  // onClick={() => this.orderCancelCustoemr}\n                                  onClick={this.orderCancelCustoemr}\n                                >\n                                  Cancel order\n                                </Button>\n                              ) : null}\n                            </React.Fragment>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row section-t-space\">\n              <div className=\"col-lg-6\">\n                <div className=\"stripe-section\">\n                  <h5>Address</h5>\n                  <div>\n                    <h5 className=\"checkout_class\">{orderAddress.PlaceName}</h5>\n                    <h6 className=\"checkout_class\">{orderAddress.areaName}</h6>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>{orderAddress.full_address}</td>\n                        </tr>\n                        <tr>\n                          <td>{orderAddress.districtName}</td>\n                          <td>{orderAddress.vilalgeName}</td>\n                        </tr>\n                        {/* <tr>\n                          <td>{orderAddress.district}</td>\n                          <td>{orderAddress.state}</td>\n                        </tr> */}\n                        {/* <br></br> */}\n                        <tr>\n                          <td>\n                            {\" \"}\n                            <a href={\"tel:\" + orderAddress.phone_number}>\n                              {orderAddress.phone_number}\n                            </a>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {order ? (\n              <div className=\"row section-t-space\">\n                <div className=\"col-lg-6\">\n                  <div className=\"stripe-section\">\n                    <div className=\"col-lg-6 col-sm-12 col-xs-12\">\n                      <div className=\"checkout-details\">\n                        <div className=\"order-box\">\n                          <div className=\"title-box\">\n                            <div>\n                              Product <span> Total</span>\n                            </div>\n                          </div>\n                          <ul className=\"qty\">\n                            {/* {orderItems.map(order_item => ( */}\n                            {orderItems.map((item, index) => {\n                              return (\n                                // <li key={index}>\n                                //   {item.title} × {item.quantity}{\" \"}\n                                //   <span>Rs: {item.final_price}</span>\n                                // </li>\n                                <Row>\n                                  <Col xs={8}>\n                                    {\" \"}\n                                    {item.itemLocalName\n                                      ? item.itemLocalName\n                                      : item.itemName}{\" \"}\n                                    [{item.vname}] × {item.quantity}{\" \"}\n                                  </Col>\n                                  <Col xs={4}>Rs: {item.final_price}</Col>\n                                </Row>\n                              );\n                            })}\n                          </ul>\n\n                          <ul className=\"total\">\n                            <li>\n                              Total <span className=\"count\">{order.total}</span>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(OrderItem);\n// export default OrderItem;\n"],"sourceRoot":""}