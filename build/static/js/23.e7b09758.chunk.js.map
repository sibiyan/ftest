{"version":3,"sources":["../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/CardDeck.js","components/ld/shopManagement/result.jsx","components/ld/shopManagement/test.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","Container","a","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","Object","prefix","suffix","createElement","displayName","defaultProps","__webpack_exports__","_createWithBsPrefix__WEBPACK_IMPORTED_MODULE_0__","SearchResult","orders","this","react_default","CardDeck","Row","map","order","index","Col","sm","Card","key","bg","text","style","width","Header","customer_name","Body","Title","id","place_name","area_name","mobile_number","start_date","orderStatus","Link","to","concat","Button","variant","Manage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchOrders","e","_this$state","state","area","order_status","phone_number","name","console","log","userType","authAxios","get","orderFilterURL","params","then","res","setState","data","catch","err","loading","error","fetchOrderStatus","orderStatusListURL","fetchAreas","areaFilterURL","areas","handleChangeArea","selectedArea","handleChangeStatus","status","form","fetchUserType","event","fieldName","target","fleldVal","value","objectSpread","defineProperty","_this$state2","ClassName","react_select_browser_esm","onChange","getOptionLabel","option","getOptionValue","options","isSearchable","onInputChange","handleInputChange","noOptionsMessage","placeholder","autoFocus","menuIsOpen","menuOpen","Form","Group","controlId","Control","type","defaultValue","handleChange","bind","onClick","result","connect","user","UserType","token","auth","dispatch","fetchUser"],"mappings":"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","file":"static/js/23.e7b09758.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return (\n    /*#__PURE__*/\n    React.createElement(Component, _extends({\n      ref: ref\n    }, props, {\n      className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n    }))\n  );\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-deck');","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// import Suggestions from \"./searchSuggestions\";\n// import style from \"./searchStyle.css\";\nimport { orderSearchURL } from \"../../../constants\";\nimport Select from \"react-select\";\n// import SearchResult from \"searchResult\";\nimport {\n  Form,\n  Button,\n  Card,\n  InputGroup,\n  FormControl,\n  Col,\n  Container,\n  CardDeck,\n  ListGroup,\n  ListGroupItem,\n  Row\n} from \"react-bootstrap\";\n\nclass SearchResult extends Component {\n  render() {\n    const { orders } = this.props;\n    // console.log(orders);\n\n    return (\n      //   <Container>\n      <Container fluid>\n        <CardDeck>\n          <Row>\n            {orders.map((order, index) => (\n              <Col sm={4}>\n                <Card\n                  key={index}\n                  bg={\"secondary\"}\n                  text={\"light\"}\n                  style={{ width: \"21rem\" }}\n                  className=\"mb-2\"\n                >\n                  <Card.Header>\n                    {order.customer_name} <br></br>\n                  </Card.Header>\n                  <Card.Body>\n                    <Card.Title>Order No: {order.id}</Card.Title>\n                    {order.place_name} <br></br>\n                    {order.area_name} <br></br>\n                    {order.mobile_number} <br></br>\n                    {order.start_date} <br></br>\n                    {order.orderStatus} <br></br>\n                    {/* <Card.Link href=\"#\">View more</Card.Link> */}\n                    <Link to={`order/${order.id}`}>\n                      <Button variant=\"secondary\">More</Button>\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </CardDeck>\n      </Container>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport { authAxios } from \"../../../authAxios\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { fetchUser } from \"../../../actions/user\";\nimport { connect } from \"react-redux\";\n\nimport {\n  orderFilterURL,\n  orderStatusListURL,\n  areaFilterURL\n} from \"../../../constants\";\nimport Result from \"./result\";\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      areas: [],\n      area: \"\",\n      orderStatus: [],\n      order_status: \"\",\n      form: {\n        phone_number: \"\",\n        name: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAreas();\n    this.fetchOrders();\n    this.fetchOrderStatus();\n    this.props.fetchUserType();\n  }\n\n  //   const order_status =\n  //     values[\"order_status\"] === undefined ? null : values[\"order_status\"];\n  //   const area =\n  //     values[\"SelectedArea\"] === undefined ? null : values[\"SelectedArea\"];\n  //   const name = values[\"name\"] === undefined ? null : values[\"name\"];\n  //   const phone_number =\n  //     values[\"phone_number\"] === undefined ? null : values[\"phon_number\"];\n\n  fetchOrders = e => {\n    // e.preventDefault();\n\n    const { area, order_status, phone_number, name } = this.state;\n    console.log(order_status);\n    const { userType } = this.props;\n    authAxios\n      .get(orderFilterURL, {\n        params: {\n          userType,\n          area,\n          order_status,\n          phone_number,\n          name\n        }\n      })\n      .then(res => {\n        // setOrders(res.data);\n        this.setState({ orders: res.data });\n      })\n      .catch(err => {\n        this.setState({ loading: false, error: err });\n      });\n  };\n\n  fetchOrderStatus = () => {\n    authAxios\n      .get(orderStatusListURL)\n      .then(res => {\n        // SetOrderStatus(res.data);\n        this.setState({ orderStatus: res.data });\n      })\n      .catch(err => {\n        // this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      });\n    // });\n  };\n\n  fetchAreas = () => {\n    authAxios\n      .get(areaFilterURL)\n      .then(res => {\n        // setAreas(res.data);\n        this.setState({ areas: res.data });\n      })\n      .catch(err => {\n        // this.setState({\n        //   error: err.message,\n        //   loading: false\n        // });\n      });\n    // });\n  };\n\n  handleChangeArea = selectedArea => {\n    this.setState({\n      area: selectedArea.name\n    });\n  };\n  handleChangeStatus = status => {\n    this.setState({\n      order_status: status.name\n    });\n  };\n\n  handleChange(event) {\n    let fieldName = event.target.name;\n    let fleldVal = event.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } });\n    // console.log(this.state.form.customer_name);\n  }\n\n  render() {\n    // console.log(this.state.order_status);\n    const {\n      order_status,\n      orderStatus,\n      areas,\n      area,\n      name,\n      orders,\n      phone_number\n    } = this.state;\n    console.log(orders);\n\n    return (\n      <div>\n        <Card ClassName=\"h-100 shadow-sm bg-white rounded\">\n          <Card.Body ClassName=\"d-flex felx-column\">\n            <div ClassName=\"a-flex mb-2 justify-content-between\">\n              <Select\n                className=\"mb-3\"\n                onChange={this.handleChangeStatus}\n                getOptionLabel={option => `${option.name}`}\n                getOptionValue={option => `${option}`}\n                options={orderStatus}\n                isSearchable={true}\n                //   filterOption={this.customFilter}\n                onInputChange={this.handleInputChange}\n                noOptionsMessage={() => null}\n                placeholder={\"Select order status\"}\n                autoFocus={true}\n                menuIsOpen={this.state.menuOpen}\n              />\n\n              <Select\n                className=\"mb-3\"\n                onChange={this.handleChangeArea}\n                getOptionLabel={option => `${option.name}`}\n                getOptionValue={option => `${option}`}\n                options={areas}\n                isSearchable={true}\n                //   filterOption={this.customFilter}\n                onInputChange={this.handleInputChange}\n                noOptionsMessage={() => null}\n                placeholder={\"Select area\"}\n                autoFocus={true}\n                menuIsOpen={this.state.menuOpen}\n              />\n              <Form>\n                <Form.Group controlId=\"formGridcustomer_name\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Customer Name\"\n                    ClassName=\"mb-3\"\n                    defaultValue={this.state.form.name}\n                    onChange={this.handleChange.bind(this)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGridphone_number\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"phone_number\"\n                    placeholder=\"Phone Number\"\n                    ClassName=\"mb-3\"\n                    defaultValue={this.state.form.phone_number}\n                    onChange={this.handleChange.bind(this)}\n                  />\n                </Form.Group>\n\n                <Button\n                  variant=\"primary\"\n                  //   type=\"submit\"\n                  onClick={this.fetchOrders}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </div>\n          </Card.Body>\n        </Card>\n        {orders ? (\n          <div>\n            <Result orders={orders} />\n          </div>\n        ) : (\n          <p>No order to show</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.user.user.UserType,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserType: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Manage);\n"],"sourceRoot":""}