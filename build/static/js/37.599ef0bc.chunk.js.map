{"version":3,"sources":["components/ld/checkout/modeOfPayment.jsx","components/ld/checkout/main.jsx"],"names":["ModeOfPayment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCheckBox","e","handleModeOfPayment","target","value","_this2","options","react_default","a","createElement","formik_esm","initialValues","modOfPayment","formik","className","name","_ref","field","map","option","Fragment","key","id","assign","type","onChange","htmlFor","Component","checkOut","state","loading","shipping","addressList","cart","selectedAddress","shop_id","ShopModeOfPayment","selectedModeofPayment","coupon","offer","handleFetchOrder","setState","authAxios","get","orderSummaryURL","then","res","data","fetchModeOfPayment","catch","err","error","shopID","undefined","ShopModeOfPaymentURL","params","handleFetchAddresses","_callee","regenerator_default","wrap","_context","prev","next","addressListURL","stop","handleCouponChange","handleCouponSubmit","_callee2","code","_context2","preventDefault","post","addCouponURL","toast","success","handleAddress","event","console","log","mode","submit","ev","_this$state","checkoutURL","redirectToOrders","refreshCart","clearKart","setTimeout","history","push","isAuthenticated","_this$state2","lib","shop_name","place_name","shipping_message","order_items","item","index","title","quantity","final_price","total","Link","style","color","to","modeOfPayment","length","address","aria-hidden","PlaceName","areaName","full_address","vilalgeName","districtName","stateName","phone_number","bind","required","Alert","variant","message","Button","onClick","size","Redirect","connect","auth","token","shoppingCart","dispatch","fetchCart"],"mappings":"+RAsEeA,cAjEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAERQ,eAAiB,SAAAC,GACfR,EAAKD,MAAMU,oBAAoBD,EAAEE,OAAOC,QAJvBX,wEAWV,IAAAY,EAAAT,KACCU,EAAYV,KAAKJ,MAAjBc,QAMR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,cANY,CACpBC,aAAc,KAMX,SAAAC,GAAM,OACLN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,KAAK,gBACT,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MAEF,OAAOX,EAAQY,IAAI,SAAAC,GAEjB,OACEZ,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,CAAgBC,IAAKF,EAAOG,IAC1Bf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,QAAAf,OAAA6B,OAAA,CACEC,KAAK,QACLF,GAAIH,EAAOG,IACPL,EAHN,CAKEb,MAAOe,EAAOG,GACdG,SAAU,SAAAxB,GACRI,EAAKL,eAAeC,OAGxBM,EAAAC,EAAAC,cAAA,SAAOiB,QAASP,EAAOJ,MACpBI,EAAOJ,0BA9CdY,aCgBtBC,6MACJC,MAAQ,CACNC,SAAS,EACTC,SAAU,GACVC,YAAa,GACbC,KAAM,KACNC,gBAAiB,KACjBC,QAAS,KACTC,kBAAmB,GACnBC,sBAAuB,KACvBC,OAAQ,GACRC,MAAO,MASTC,iBAAmB,WACjB/C,EAAKgD,SAAS,CAAEX,SAAS,IACzBY,IACGC,IAAIC,KACJC,KAAK,SAAAC,GACJrD,EAAKgD,SAAS,CAAER,KAAMa,EAAIC,KAAMjB,SAAS,IACzCrC,EAAKgD,SAAS,CAAEN,QAASW,EAAIC,KAAKZ,SAAW,WAC3C1C,EAAKuD,yBAIRC,MAAM,SAAAC,GACLzD,EAAKgD,SAAS,CAAEU,MAAOD,SAI7BF,mBAAqB,WAEnB,IAAMI,EAAS3D,EAAKoC,MAAMM,aACXkB,IAAXD,IAEF3D,EAAKgD,SAAS,CAAEX,SAAS,IACzBY,IACGC,IAAIW,IAAsB,CACzBC,OAAQ,CACNH,YAGHP,KAAK,SAAAC,GACJrD,EAAKgD,SAAS,CAAEL,kBAAmBU,EAAIC,KAAMjB,SAAS,MAEvDmB,MAAM,SAAAC,GACLzD,EAAKgD,SAAS,CAAEU,MAAOD,EAAKpB,SAAS,UAK7C0B,0CAAuB,SAAAC,IAAA,OAAAC,EAAAlD,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrBrE,EAAKgD,SAAS,CAAEX,SAAS,IACzBY,IACGC,IAAIoB,KACJlB,KAAK,SAAAC,GACJrD,EAAKgD,SAAS,CAAET,YAAac,EAAIC,KAAMjB,SAAS,MAEjDmB,MAAM,SAAAC,GACLzD,EAAKgD,SAAS,CAAEU,MAAOD,EAAKpB,SAAS,MARpB,wBAAA8B,EAAAI,SAAAP,EAAA7D,WAYvBqE,mBAAqB,SAAAhE,GACnBR,EAAKgD,SAAS,CAAEH,OAAQrC,EAAEE,OAAOC,WAInC8D,yDAAqB,SAAAC,EAAMlE,GAAN,IAAAmE,EAAA,OAAAV,EAAAlD,EAAAmD,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACnB7D,EAAEqE,iBAGW,MADPF,EAAO3E,EAAKoC,MAAMS,SAEtB7C,EAAKgD,SAAS,CAAEX,SAAS,IACzBY,IACG6B,KAAKC,IAAc,CAClBJ,SAEDvB,KAAK,SAAAC,GACJrD,EAAKgD,SAAS,CAAEF,MAAOO,EAAIC,KAAMjB,SAAS,IAC1C2C,QAAMC,QAAQ,gCAEfzB,MAAM,SAAAC,GACLzD,EAAKgD,SAAS,CAAEU,MAAOD,EAAKpB,SAAS,OAGzC2C,QAAMtB,MAAM,sBAlBK,wBAAAkB,EAAAL,SAAAG,EAAAvE,iEAsBrB+E,cAAgB,SAAAC,GACdnF,EAAKgD,SAAS,CAAEP,gBAAiB0C,EAAMzE,OAAOC,QAC9CyE,QAAQC,IAAIF,EAAMzE,OAAOC,UAQ3BF,oBAAsB,SAAA6E,GACpBtF,EAAKgD,SAAS,CAAEJ,sBAAuB0C,OAGzCC,OAAS,SAAAC,GACPA,EAAGX,iBAEH7E,EAAKgD,SAAS,CAAEX,SAAS,IAHZ,IAAAoD,EAIsCzF,EAAKoC,MAAhDK,EAJKgD,EAILhD,gBAAiBG,EAJZ6C,EAIY7C,sBAED,OAApBH,GAAsD,OAA1BG,EAC9BK,IACG6B,KAAKY,IAAa,CACjBjD,kBACAG,0BAEDQ,KAAK,SAAAC,GACJrD,EAAKgD,SAAS,CAAEX,SAAS,EAAO4C,SAAS,IACzCD,QAAMC,QAAQ,4BACdjF,EAAK2F,mBACL3F,EAAKD,MAAM6F,gBAEZpC,MAAM,SAAAC,GACLzD,EAAKgD,SAAS,CAAEX,SAAS,EAAOqB,MAAOD,GAAO,WAE5CuB,QAAMC,QAAQ,0BAIpBD,QAAMtB,MAAM,oIAxHdvD,KAAK4D,uBAEL5D,KAAK4C,8DA2HL5C,KAAKJ,MAAM8F,YAEXC,WAAW3F,KAAKJ,MAAMgG,QAAQC,KAAK,WAAY,sCAGxC,IAAApF,EAAAT,KACC8F,EAAoB9F,KAAKJ,MAAzBkG,gBADDC,EASH/F,KAAKiC,MANPG,EAHK2D,EAGL3D,YAEAC,GALK0D,EAILzD,gBAJKyD,EAKL1D,MACAG,EANKuD,EAMLvD,kBAEAG,GARKoD,EAOLxD,QAPKwD,EAQLpD,OAMF,OAAKmD,EAIHnF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACmF,EAAA,eAAD,MAEChG,KAAKiC,MAAMC,SAAWvB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACrCmB,EACC1B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,WAASK,UAAU,mBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,UAAKwB,EAAK4D,WACVtF,EAAAC,EAAAC,cAAA,UAAKwB,EAAK6D,aAEZvF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKwB,EAAK8D,2BAW5BxF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gCACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,wBAGZF,EAAAC,EAAAC,cAAA,MAAIK,UAAU,OACXmB,EAAK+D,YAAY9E,IAAI,SAAC+E,EAAMC,GAC3B,OACE3F,EAAAC,EAAAC,cAAA,MAAIY,IAAK6E,GACND,EAAKA,KAAKE,MADb,SACuBF,EAAKG,SAAU,IACpC7F,EAAAC,EAAAC,cAAA,YAEGwF,EAAKI,iBAMhB9F,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aACZP,EAAAC,EAAAC,cAAA,qBACW,IACTF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAEbmB,EAAKqE,SASZ/F,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SACZP,EAAAC,EAAAC,cAAA,kBACQ,IACNF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAEbmB,EAAKqE,UAMd/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,GAAE,kBAChCnG,EAAAC,EAAAC,cAAA,UAAQe,KAAK,SAASV,UAAU,qBAAhC,kBAQPsB,EACC7B,EAAAC,EAAAC,cAAA,WAASK,UAAU,mBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,MAAI+F,MAAO,CAAEC,MAAO,SAApB,4BAEFlG,EAAAC,EAAAC,cAACkG,EAAD,CACEzG,oBAAqBN,KAAKM,oBAC1BI,QAAS8B,MAIb,KACHJ,EAAY4E,OAAS,EACpBrG,EAAAC,EAAAC,cAAA,WAASK,UAAU,mBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,MAAI+F,MAAO,CAAEC,MAAO,SAApB,oBAEDzE,EAAYd,IAAI,SAAA2F,GAAO,OACtBtG,EAAAC,EAAAC,cAAA,OAAKY,IAAKwF,EAAQvF,GAAIR,UAAU,OAC9BP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0BACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,eACdP,EAAAC,EAAAC,cAAA,KACEK,UAAU,mBACVgG,cAAY,SACR,IAJR,WAUNvG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,UAAKoG,EAAQE,YAEfxG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,UAAKoG,EAAQG,WAEfzG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,UAAKoG,EAAQI,cACb1G,EAAAC,EAAAC,cAAA,sBAAcoG,EAAQK,aACtB3G,EAAAC,EAAAC,cAAA,uBACaoG,EAAQM,cAErB5G,EAAAC,EAAAC,cAAA,mBAAWoG,EAAQO,WACnB7G,EAAAC,EAAAC,cAAA,oBAAYoG,EAAQQ,cACpB9G,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEL,MAAOyG,EAAQvF,GACfE,KAAK,QACLT,KAAK,WACLU,SAAUpB,EAAKsE,gBACd,IANL,uBAsBxBpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,GAAE,mBAAlC,gBAMJnG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,QACEK,UAAU,cAGVP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAAf,qBACAnB,EAAAC,EAAAC,cAAA,SAEEgB,SAAU7B,KAAKqE,mBAAmBqD,KAAK1H,MACvC4B,KAAK,OACLV,UAAU,eACVQ,GAAG,SACHlB,MAAOR,KAAKiC,MAAMS,OAClBvB,KAAK,SACLwG,SAAS,MAGbhH,EAAAC,EAAAC,cAAA,WACG8B,EACChC,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,QAAS,WAAhB,mBACmBlF,EAAMmF,SAEvB,MAENnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEnG,KAAK,SACLoG,QAAShI,KAAKsE,mBAAmBoD,KAAK1H,MACtC6H,QAAQ,OACRI,KAAK,MACLrB,MAAO,CAAEC,MAAO,QALlB,oBAcRlG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEe,KAAK,SACLV,UAAU,gBACV8G,QAAShI,KAAKoF,QAHhB,iBAUJzE,EAAAC,EAAAC,cAAA,2CAvOGF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUpB,GAAG,kBAhKH/E,aA2ZRoG,4BAPS,SAAAlG,GACtB,MAAO,CACL6D,gBAAiB7D,EAAMmG,KAAKC,MAC5BhG,KAAMJ,EAAMI,KAAKiG,eAVM,SAAAC,GACzB,MAAO,CACL9C,YAAa,kBAAM8C,EAASC,gBAC5B9C,UAAW,kBAAM6C,EAAS7C,QAWfyC,CAGbnG","file":"static/js/37.599ef0bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nclass ModeOfPayment extends Component {\n  constructor(props) {\n    super(props);\n  }\n  handleCheckBox = e => {\n    this.props.handleModeOfPayment(e.target.value);\n  };\n\n  // handleChange = e => {\n  //   this.props.handleModeOfPayment(e);\n  // };\n\n  render() {\n    const { options } = this.props;\n    const initialValues = {\n      modOfPayment: \"\"\n    };\n    // console.log(this.props.modOfPayment);\n\n    return (\n      <Formik initialValues={initialValues}>\n        {formik => (\n          <Form>\n            <div className=\"form-control\">\n              <Field name=\"modOfPayment\">\n                {({ field }) => {\n                  // console.log(field);\n                  return options.map(option => {\n                    // console.log(option);\n                    return (\n                      <React.Fragment key={option.id}>\n                        <div className=\"row\">\n                          <div className=\"col-lg-3\">\n                            <div className=\"box\">\n                              <div className=\"radio\">\n                                <input\n                                  type=\"radio\"\n                                  id={option.id}\n                                  {...field}\n                                  // {...rest}\n                                  value={option.id}\n                                  onChange={e => {\n                                    this.handleCheckBox(e);\n                                  }}\n                                />\n                                <label htmlFor={option.name}>\n                                  {option.name}\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </React.Fragment>\n                    );\n                  });\n                }}\n              </Field>\n              {/* <ErrorMessage component={TextError} name={name} /> */}\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default ModeOfPayment;\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {\n  addressListURL,\n  checkoutURL,\n  orderSummaryURL,\n  ShopModeOfPaymentURL,\n  addCouponURL\n} from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\nimport { fetchCart, clearKart } from \"../../../actions/cart\";\nimport ModeOfPayment from \"./modeOfPayment\";\n\nclass checkOut extends Component {\n  state = {\n    loading: false,\n    shipping: 25,\n    addressList: [],\n    cart: null,\n    selectedAddress: null,\n    shop_id: null,\n    ShopModeOfPayment: [],\n    selectedModeofPayment: null,\n    coupon: \"\",\n    offer: \"\"\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    // this.props.refreshCart();\n    this.handleFetchOrder();\n  }\n\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ cart: res.data, loading: false });\n        this.setState({ shop_id: res.data.shop_id }, () => {\n          this.fetchModeOfPayment();\n        });\n      })\n\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  fetchModeOfPayment = () => {\n    // console.log(\"fetching mode\");\n    const shopID = this.state.shop_id;\n    if (shopID !== undefined) {\n      // console.log(shopID);\n      this.setState({ loading: true });\n      authAxios\n        .get(ShopModeOfPaymentURL, {\n          params: {\n            shopID\n          }\n        })\n        .then(res => {\n          this.setState({ ShopModeOfPayment: res.data, loading: false });\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    }\n  };\n\n  handleFetchAddresses = async () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(addressListURL)\n      .then(res => {\n        this.setState({ addressList: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleCouponChange = e => {\n    this.setState({ coupon: e.target.value });\n    // console.log(e.target.value);\n  };\n\n  handleCouponSubmit = async e => {\n    e.preventDefault();\n    // console.log(this.state.coupon);\n    const code = this.state.coupon;\n    if (code !== \"\") {\n      this.setState({ loading: true });\n      authAxios\n        .post(addCouponURL, {\n          code\n        })\n        .then(res => {\n          this.setState({ offer: res.data, loading: false });\n          toast.success(\"Coupon applied succesfully\");\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    } else {\n      toast.error(\"Coupon not entered\");\n    }\n  };\n\n  handleAddress = event => {\n    this.setState({ selectedAddress: event.target.value });\n    console.log(event.target.value);\n  };\n\n  //   handleModeOfPayment = event => {\n  //     this.setState({ selectedModeofPayment: event.target.value });\n  //     console.log(event.target.value);\n  //   };\n\n  handleModeOfPayment = mode => {\n    this.setState({ selectedModeofPayment: mode });\n    // console.log(mode);\n  };\n  submit = ev => {\n    ev.preventDefault();\n    // console.log(\"submitting\");\n    this.setState({ loading: true });\n    const { selectedAddress, selectedModeofPayment } = this.state;\n\n    if (selectedAddress !== null && selectedModeofPayment !== null) {\n      authAxios\n        .post(checkoutURL, {\n          selectedAddress,\n          selectedModeofPayment\n        })\n        .then(res => {\n          this.setState({ loading: false, success: true });\n          toast.success(\"Order placed succesfully\");\n          this.redirectToOrders();\n          this.props.refreshCart();\n        })\n        .catch(err => {\n          this.setState({ loading: false, error: err }, () => {\n            // this.redirectToOrders();\n            toast.success(\"There was an error\");\n          });\n        });\n    } else {\n      toast.error(\"Please select an address and mode of payment\");\n    }\n  };\n\n  redirectToOrders() {\n    this.props.clearKart();\n    // console.log(\"refreshcard\");\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const {\n      addressList,\n      selectedAddress,\n      cart,\n      ShopModeOfPayment,\n      shop_id,\n      offer\n    } = this.state;\n\n    // console.log(this.state.offer);\n    // console.log(ShopModeOfPayment);\n\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <div>\n        {/* <Header /> */}\n        <ToastContainer />\n        {/* <Footer /> */}\n        {this.state.loading && <div className=\"loading-cls\"></div>}\n        {cart ? (\n          <div className=\"container padding-cls\">\n            <div className=\"checkout-page\">\n              <div className=\"checkout-form\">\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-9\">\n                        <div className=\"dashboard-right\">\n                          <div className=\"dashboard\">\n                            <div className=\"box-account box-info\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                  <div className=\"box\">\n                                    <h3>{cart.shop_name}</h3>\n                                    <h6>{cart.place_name}</h6>\n                                  </div>\n                                  <br></br>\n                                  <h4>{cart.shipping_message}</h4>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                {/* end of shop detail  */}\n                <div className=\"col-lg-6 col-sm-12 col-xs-12\">\n                  <div className=\"checkout-details\">\n                    <div className=\"order-box\">\n                      <div className=\"title-box\">\n                        <div>\n                          Product <span> Total</span>\n                        </div>\n                      </div>\n                      <ul className=\"qty\">\n                        {cart.order_items.map((item, index) => {\n                          return (\n                            <li key={index}>\n                              {item.item.title} × {item.quantity}{\" \"}\n                              <span>\n                                {/* {symbol} */}\n                                {item.final_price}\n                              </span>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      <ul className=\"sub-total\">\n                        <li>\n                          Subtotal{\" \"}\n                          <span className=\"count\">\n                            {/* {symbol} */}\n                            {cart.total}\n                          </span>\n                        </li>\n                        {/* <li>\n                          Shipping{\" \"}\n                          <span className=\"count\">{this.state.shipping}</span>\n                        </li> */}\n                      </ul>\n\n                      <ul className=\"total\">\n                        <li>\n                          Total{\" \"}\n                          <span className=\"count\">\n                            {/* {symbol} */}\n                            {cart.total}\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n\n                    <Link style={{ color: \"#FFF\" }} to={`/order-summary`}>\n                      <button type=\"button\" className=\"btn btn-secondary\">\n                        Edit Order\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n\n              {ShopModeOfPayment ? (\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <div className=\"account-sidebar\">\n                      <h6 style={{ color: \"#FFF\" }}> Select Mode of Payment</h6>\n                    </div>\n                    <ModeOfPayment\n                      handleModeOfPayment={this.handleModeOfPayment}\n                      options={ShopModeOfPayment}\n                    />\n                  </div>\n                </section>\n              ) : null}\n              {addressList.length > 0 ? (\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <div className=\"account-sidebar\">\n                      <h6 style={{ color: \"#FFF\" }}> Select Address</h6>\n                    </div>\n                    {addressList.map(address => (\n                      <div key={address.id} className=\"row\">\n                        <div className=\"col-lg-3\">\n                          <div className=\"dashboard-left\">\n                            <div className=\"collection-mobile-back\">\n                              <span className=\"filter-back\">\n                                <i\n                                  className=\"fa fa-angle-left\"\n                                  aria-hidden=\"true\"\n                                ></i>{\" \"}\n                                back\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-9\">\n                          <div className=\"dashboard-right\">\n                            <div className=\"dashboard\">\n                              <div className=\"box-account box-info\">\n                                <div className=\"box-head\">\n                                  <h2>{address.PlaceName}</h2>\n                                </div>\n                                <div className=\"row\">\n                                  <div className=\"col-sm-6\">\n                                    <div className=\"box\">\n                                      <div className=\"box-title\">\n                                        <h3>{address.areaName}</h3>\n                                      </div>\n                                      <div className=\"box-content\">\n                                        <h6>{address.full_address}</h6>\n                                        <h6>Village: {address.vilalgeName}</h6>\n                                        <h6>\n                                          District: {address.districtName}\n                                        </h6>\n                                        <h6>Sate: {address.stateName}</h6>\n                                        <h6>Phone: {address.phone_number}</h6>\n                                        <br></br>\n                                      </div>\n                                      <div className=\"radio\">\n                                        <label>\n                                          <input\n                                            value={address.id}\n                                            type=\"radio\"\n                                            name=\"optradio\"\n                                            onChange={this.handleAddress}\n                                          />{\" \"}\n                                          Select\n                                        </label>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </section>\n              ) : (\n                <div>\n                  <Link style={{ color: \"#FFF\" }} to={`/create-address`}>\n                    Add Address\n                  </Link>\n                </div>\n              )}\n\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <div className=\"theme-card\">\n                    <form\n                      className=\"theme-form\"\n                      // onSubmit={this.handleCouponSubmit}\n                    >\n                      <div className=\"form-group\">\n                        <label htmlFor=\"coupon\">Enter Coupon code</label>\n                        <input\n                          // onChange={this.handleCouponChange}\n                          onChange={this.handleCouponChange.bind(this)}\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"coupon\"\n                          value={this.state.coupon}\n                          name=\"coupon\"\n                          required=\"\"\n                        />\n                      </div>\n                      <div>\n                        {offer ? (\n                          <Alert variant={\"success\"}>\n                            Offer Applied !!{offer.message}\n                          </Alert>\n                        ) : null}\n                      </div>\n                      <Button\n                        type=\"submit\"\n                        onClick={this.handleCouponSubmit.bind(this)}\n                        variant=\"flat\"\n                        size=\"xxl\"\n                        style={{ color: \"red\" }}\n                      >\n                        Apply coupon\n                      </Button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n\n              <br></br>\n              <button\n                type=\"button\"\n                className=\"btn-solid btn\"\n                onClick={this.submit}\n              >\n                Place Order\n              </button>\n            </div>\n          </div>\n        ) : (\n          <p>You dont have an active order</p>\n        )}\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart()),\n    clearKart: () => dispatch(clearKart)\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token,\n    cart: state.cart.shoppingCart\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(checkOut);\n// export default checkOut;\n"],"sourceRoot":""}