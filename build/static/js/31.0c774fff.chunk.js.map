{"version":3,"sources":["components/ld/manageShops/filterResult.jsx","components/ld/manageShops/filterShops.jsx","components/ld/manageShops/filterIndex.jsx"],"names":["SearchResult","shopCount","this","props","shops","length","console","log","react_default","a","createElement","Container","CardDeck","map","shop","index","Card","key","border","style","width","Header","category","Body","Title","name","Text","place","viallage","cluster","district","state","Component","Manage","_useState","useState","_useState2","Object","slicedToArray","setShops","formik","useFormik","initialValues","areas","places","villages","clusters","districts","states","onSubmit","values","undefined","village","authAxios","get","shopFilterURL","params","then","res","data","catch","err","className","handleSubmit","id","type","onChange","handleChange","value","disabled","selected","area","placeholder","required","filterResult","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchServieArea","setState","loading","serviceAreaURL","error","message","_this$state","_this$props","userType","token","breadcrumb","title","filterShops","connect","user","UserType","auth","dispatch","fetchUserType","fetchUser"],"mappings":"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","file":"static/js/31.0c774fff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// import Suggestions from \"./searchSuggestions\";\n// import style from \"./searchStyle.css\";\nimport { orderSearchURL } from \"../../../constants\";\nimport Select from \"react-select\";\n// import SearchResult from \"searchResult\";\nimport {\n  Form,\n  Button,\n  Card,\n  InputGroup,\n  FormControl,\n  Col,\n  Container,\n  CardDeck\n} from \"react-bootstrap\";\n\nclass SearchResult extends Component {\n  render() {\n    const shopCount = this.props.shops.length;\n\n    console.log(shopCount);\n\n    return (\n      <Container>\n        <CardDeck>\n          {this.props.shops.map((shop, index) => (\n            <Card key={index} border=\"success\" style={{ width: \"23rem\" }}>\n              <Card.Header>{shop.category}</Card.Header>\n              <Card.Body>\n                <Card.Title>{shop.name}</Card.Title>\n                <Card.Text>\n                  <p>{shop.place}</p>\n                  <p>{shop.viallage}</p>\n                  <p>{shop.cluster}</p>\n                  <p>{shop.district}</p>\n                  <p>{shop.state}</p>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          ))}\n        </CardDeck>\n      </Container>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../actions/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { shopFilterURL } from \"../../../constants\";\nimport { useFormik, Field } from \"formik\";\n// import Result from \"./orderList\";\nimport SearchResult from \"./filterResult\";\n\nconst Manage = props => {\n  const [shops, setShops] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      place: \"\",\n      areas: \"\",\n      places: \"\",\n      villages: \"\",\n      clusters: \"\",\n      districts: \"\",\n      states: \"\"\n    },\n    onSubmit: values => {\n      const place = values[\"place\"] === undefined ? null : values[\"place\"];\n      const village =\n        values[\"village\"] === undefined ? null : values[\"village\"];\n      const cluster =\n        values[\"cluster\"] === undefined ? null : values[\"cluster\"];\n      const district =\n        values[\"district\"] === undefined ? null : values[\"district\"];\n      const state = values[\"state\"] === undefined ? null : values[\"state\"];\n\n      // this.setState({ loading: true });\n      authAxios\n        .get(shopFilterURL, {\n          params: {\n            place,\n            village,\n            cluster,\n            district,\n            state\n          }\n        })\n        .then(res => {\n          // this.setState({ orders: res.data, loading: false, success: true });\n          setShops(res.data);\n        })\n        .catch(err => {\n          // this.setState({ loading: false, error: err });\n        });\n    }\n  });\n\n  //   console.log(orders);\n\n  return (\n    <div>\n      <section className=\"register-page section-b-space\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h4>Filter Shops</h4>\n              <div className=\"theme-card\">\n                <div className=\"checkout-page\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className=\"checkout-form\">\n                      <div className=\"row check-out\">\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">State</div>\n                          <select\n                            id=\"state\"\n                            name=\"state\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.state}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your option\n                            </option>\n                            {props.states.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">District</div>\n                          <select\n                            id=\"district\"\n                            name=\"district\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.district}\n                          >\n                            <option value=\"\">Select your option</option>\n                            {props.districts.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">Cluster</div>\n                          <select\n                            id=\"cluster\"\n                            name=\"cluster\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.cluster}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your option\n                            </option>\n                            {props.clusters.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">Village</div>\n                          <select\n                            id=\"village\"\n                            name=\"village\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.village}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your option\n                            </option>\n                            {props.villages.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">Place</div>\n                          <select\n                            id=\"place\"\n                            name=\"place\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.place}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your option\n                            </option>\n                            {props.places.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">Areas</div>\n                          <select\n                            id=\"place\"\n                            name=\"place\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.area}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your option\n                            </option>\n                            {props.areas.map(a => (\n                              <option key={a.id}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                      <br></br>\n                      <input\n                        type=\"submit\"\n                        className=\"btn btn-solid\"\n                        id=\"submit\"\n                        placeholder=\"search\"\n                        required=\"\"\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <SearchResult shops={shops} />\n    </div>\n  );\n};\n\nexport default Manage;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport FilterShops from \"./filterShops\";\n// import Antd from \"./antd2\";\n\nimport { serviceAreaURL } from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\nimport { fetchUser } from \"../../../actions/user\";\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      areas: [],\n      places: [],\n      villages: [],\n      clusters: [],\n      districts: [],\n      states: [],\n      loading: false,\n      error: null,\n      data: []\n    };\n  }\n\n  componentWillMount() {\n    // this.props.fetchUserType();\n    this.fetchServieArea();\n  }\n\n  fetchServieArea = () => {\n    this.setState({ loading: true }, () => {\n      authAxios\n        .get(serviceAreaURL)\n        .then(res => {\n          this.setState({\n            data: res.data[0]\n          });\n          this.setState({\n            areas: res.data[0].areas\n          });\n          this.setState({\n            places: res.data[0].places\n          });\n          this.setState({\n            villages: res.data[0].villages\n          });\n          this.setState({\n            clusters: res.data[0].clusters\n          });\n          this.setState({\n            districts: res.data[0].districts\n          });\n          this.setState({\n            states: res.data[0].states\n          });\n        })\n        .catch(err => {\n          this.setState({\n            error: err.message,\n            loading: false\n          });\n        });\n    });\n  };\n\n  render() {\n    const {\n      data,\n      areas,\n      places,\n      villages,\n      clusters,\n      districts,\n      states\n    } = this.state;\n    const { userType, token } = this.props;\n    console.log(data);\n\n    return (\n      <div>\n        <Breadcrumb title={\"Manage\"} />\n        <FilterShops\n          areas={areas}\n          places={places}\n          villages={villages}\n          clusters={clusters}\n          districts={districts}\n          states={states}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.user.user.UserType,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserType: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Manage);\n"],"sourceRoot":""}