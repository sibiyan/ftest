{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ld/complaint/register.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","connect","state","currentUser","user","userID","token","auth","props","_useState","useState","_useState2","Object","_Users_swalihvpm_Desktop_django_react_ftest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","saving","setSaving","formik","useFormik","initialValues","applicant","name","phone_number","order_number","detail","onSubmit","values","console","log","authAxios","post","registerComplaintURL","status","then","res","toast","success","catch","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to","react_toastify__WEBPACK_IMPORTED_MODULE_10__","_common_breadcrumb__WEBPACK_IMPORTED_MODULE_5__","title","className","handleSubmit","htmlFor","id","type","onChange","handleChange","details","placeholder","required","_common_footer__WEBPACK_IMPORTED_MODULE_8___default","logoName"],"mappings":"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","file":"static/js/21.d7830d31.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../actions/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { registerComplaintURL } from \"../../../constants\";\nimport Footer from \"../common/footer\";\nimport { useFormik, Field } from \"formik\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Register = props => {\n  const [saving, setSaving] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      applicant: props.currentUser,\n      name: \"\",\n      phone_number: \"\",\n      order_number: \"\",\n      detail: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n      const applicant = props.currentUser;\n      const name = values[\"name\"] === undefined ? null : values[\"name\"];\n      const phone_number =\n        values[\"phone_number\"] === undefined ? null : values[\"phone_number\"];\n      const order_number =\n        values[\"order_number\"] === undefined ? null : values[\"order_number\"];\n      const detail = values[\"detail\"] === undefined ? null : values[\"detail\"];\n\n      authAxios\n        .post(registerComplaintURL, {\n          applicant: applicant,\n          name: name,\n          phone_number: phone_number,\n          order_number: order_number,\n          detail: detail,\n          status: \"pending\"\n        })\n        .then(res => {\n          toast.success(\n            \"Thank you for contacting us! You may receive a call from us soon :)\"\n          );\n          setSaving(true);\n        })\n        .catch(err => {\n          toast.error(\"Oops there was an error\");\n          // this.setState({ loading: false, error: err });\n        });\n    }\n  });\n  if (saving) {\n    return <Redirect to=\"/\" />;\n  }\n  if (!props.token) {\n    return <Redirect to=\"/login\" />;\n  }\n  // console.log(props.currentUser);\n\n  return (\n    <div>\n      <ToastContainer />\n      <Breadcrumb title={\"My Orders\"} />\n      <section className=\"register-page section-b-space\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h3>Contact Us</h3>\n              <div className=\"theme-card\">\n                <form className=\"theme-form\" onSubmit={formik.handleSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"email\">Your Name</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.name}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"review\">Phone Number</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"phone_number\"\n                        name=\"phone_number\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.phone_number}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"email\">Do you have an order ID?</label>\n                      <input\n                        className=\"form-control\"\n                        id=\"order_number\"\n                        name=\"order_number\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.order_number}\n                      />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"review\">What is your concern?</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"details\"\n                        name=\"details\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        value={formik.values.details}\n                      />\n                      <br></br>\n                    </div>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-solid\"\n                      id=\"submit\"\n                      placeholder=\"Submit\"\n                      required=\"\"\n                    />\n                  </div>\n                </form>\n                {/* <Suspense fallback={<Loader />}> */}\n                <Footer logoName={\"logo.png\"} />\n                {/* </Suspense> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.user.userID,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Register);\n"],"sourceRoot":""}