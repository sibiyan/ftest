{"version":3,"sources":["components/ld/manageOrders/CustomInput.jsx","components/ld/manageOrders/testTable.jsx","components/ld/manageOrders/tableSearchForm.jsx","components/ld/manageOrders/tableIndex.jsx"],"names":["CustomInput","props","placeholder","name","value","_props$onChange","onChange","react_default","a","createElement","Form","Group","Control","window","Date","prototype","isValid","this","getTime","ColumnFilter","_ref","_ref$column","column","filterValue","setFilter","filter","e","target","undefined","concat","ReactTable","_ref2","columns","data","filterTypes","year","rows","id","row","rowValue","values","Number","getFullYear","text","String","toLowerCase","startsWith","defaultColumn","Filter","_useTable","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","Container","Table","Object","assign","responsive","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","i","render","getHeaderProps","isSorted","isSortedDesc","getSortByToggleProps","canFilter","extraClass","key","className","getRowProps","cells","cell","getCellProps","Manage","_useState","useState","_useState2","slicedToArray","orders","setOrders","_useState3","_useState4","loading","setloading","_useState5","setHours","setMinutes","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","formik","useFormik","initialValues","place","onSubmit","endingtDate","staringtDate","authAxios","get","orderFilterURL","params","then","res","catch","err","toast","error","Header","accessor","Cell","cellInfo","Link","to","handleSubmit","type","handleChange","disabled","selected","places","index","react_datepicker_min_default","selectsStart","date","popperModifiers","preventOverflow","enabled","dateFormat","onFocus","readOnly","timeFormat","injectTimes","required","Card","bg","style","width","Body","Title","order","order_status","length","testTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchServieArea","setState","serviceAreaURL","message","state","tableSearchForm","Component","connect","user","token","auth","dispatch","fetchUserType","fetchUser"],"mappings":"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","file":"static/js/23.3a90623e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default props => {\n  let { placeholder, name, value, onChange = () => null } = props;\n  return (\n    // <div class=\"col-lg\">\n    <Form.Group>\n      <Form.Control\n        placeholder={placeholder}\n        name={name}\n        value={value ? value : \"\"}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n};\n","import React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport CustomInput from \"./CustomInput\";\n\nwindow.Date.prototype.isValid = function() {\n  // An invalid date object returns NaN for getTime() and NaN is the only\n  // object not strictly equal to itself.\n  // eslint-disable-next-line\n  return this.getTime() === this.getTime();\n};\n\nconst ColumnFilter = ({ column: { filterValue, setFilter, filter } }) => {\n  return (\n    <CustomInput\n      value={filterValue || \"\"}\n      onChange={e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${filter ? filter : \"\"}...`}\n    />\n  );\n};\n\n/**\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react table has data that consist of an array of JSONs\n */\nconst ReactTable = ({ columns, data }) => {\n  // functions to run when a column is filtered depending on the type\n  const filterTypes = {\n    year: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined &&\n          Number(filterValue) &&\n          new Date(rowValue) &&\n          new Date(rowValue).isValid()\n          ? new Date(rowValue).getFullYear() === Number(filterValue)\n          : true;\n      });\n    },\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined\n          ? String(rowValue)\n              .toLowerCase()\n              .startsWith(String(filterValue).toLowerCase())\n          : true;\n      });\n    }\n  };\n  const defaultColumn = {\n    // Let's set up our default Filter UI\n    Filter: ColumnFilter\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes\n    },\n    // hook for filters\n    useFilters,\n    // hook for sorting\n    useSortBy\n  );\n  // console.log(defaultColumn);\n  return (\n    <Container>\n      <Table\n        responsive=\"md\"\n        striped\n        bordered\n        hover\n        size=\"sm\"\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => {\n                // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n                const {\n                  render,\n                  getHeaderProps,\n                  isSorted,\n                  isSortedDesc,\n                  getSortByToggleProps,\n                  // filter,\n                  canFilter\n                } = column;\n                const extraClass = isSorted\n                  ? isSortedDesc\n                    ? \"desc\"\n                    : \"asc\"\n                  : \"\";\n                return (\n                  <th\n                    key={`th-${i}`}\n                    className={extraClass}\n                    // getHeaderProps now receives a function\n                  >\n                    <div {...getHeaderProps(getSortByToggleProps())}>\n                      {render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>{canFilter ? render(\"Filter\") : null}</div>\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default ReactTable;\n","import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { authSignup } from \"../../../actions/auth\";\nimport { Link } from \"react-router-dom\";\n// import Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { orderFilterURL } from \"../../../constants\";\nimport { useFormik, Field } from \"formik\";\n// import * as Yup from \"yup\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport Card from \"react-bootstrap/Card\";\n// import Result from \"./orderList\";\nimport Result from \"./testTable\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Manage = props => {\n  const [orders, setOrders] = useState(null);\n  const [loading, setloading] = useState(false);\n  // const [startDate, setStartDate] = useState(new Date());\n  // const [endDate, setEndDate] = useState(new Date());\n\n  const [startDate, setStartDate] = useState(\n    setHours(setMinutes(new Date(), 0), 0)\n  );\n  const [endDate, setEndDate] = useState(\n    setHours(setMinutes(new Date(), 59), 23)\n  );\n\n  // const validationSchema = Yup.object().shape({\n  //   place: Yup.string().required(\"Required\")\n  // });\n\n  const formik = useFormik({\n    initialValues: {\n      place: \"\"\n    },\n    // validationSchema\n    onSubmit: values => {\n      // const place = values[\"place\"] === undefined ? null : values[\"place\"];\n      const endingtDate = endDate === undefined ? null : endDate;\n      const staringtDate = startDate === undefined ? null : startDate;\n      const place = values[\"place\"];\n\n      if (place !== \"\") {\n        setloading(true);\n        authAxios\n          .get(orderFilterURL, {\n            params: {\n              place,\n              staringtDate,\n              endingtDate\n            }\n          })\n          .then(res => {\n            setOrders(res.data);\n            setloading(false);\n          })\n          .catch(err => {\n            setloading(false);\n            toast.error(\"error occured\");\n          });\n      } else {\n        toast.error(\"Please select a place\");\n      }\n    }\n  });\n\n  const handleChangeStartDate = date => setStartDate(date);\n  const handleChangeEndtDate = date => setEndDate(date);\n\n  const columns = [\n    {\n      Header: \"ID\",\n      accessor: \"id\",\n      // Cell: e => <a href={`order/${e.value}`}> {e.value} </a>\n\n      Cell: cellInfo => (\n        <Link\n          to={`order/${cellInfo.value}`}\n          // id={cellInfo.row.linkName}\n        >\n          {cellInfo.value}\n        </Link>\n      )\n    },\n    {\n      Header: \"Area\",\n      accessor: \"area_name\"\n    },\n    {\n      Header: \"Shop\",\n      accessor: \"shop_name\"\n    },\n    {\n      Header: \"Status\",\n      accessor: \"orderStatus\"\n    },\n    {\n      Header: \"Date\",\n      accessor: \"start_date\"\n    },\n    {\n      Header: \"Customer\",\n      accessor: \"customer_name\"\n    },\n    {\n      Header: \"Mobile\",\n      accessor: \"mobile_number\"\n    }\n  ];\n\n  // const staringtDate =\n  // console.log(orders);\n\n  return (\n    <div>\n      <section className=\"register-page section-b-space\">\n        <div className=\"container\">\n          {loading && <div className=\"loading-cls\"></div>}\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h4>Find Orders</h4>\n              <div className=\"theme-card\">\n                <div className=\"checkout-page\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className=\"checkout-form\">\n                      <div className=\"row check-out\">\n                        <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\n                          <div className=\"field-label\">Place</div>\n                          <select\n                            id=\"place\"\n                            name=\"place\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.place}\n                          >\n                            <option value=\"\" disabled selected>\n                              Select your place\n                            </option>\n                            {props.places.map((a, index) => (\n                              <option key={index}>{a}</option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                      <br></br>\n                      <div className=\"form-inline\">\n                        <div className=\"row check-out\">\n                          <div className=\"form-group col-md-1 col-sm-2 col-xs-1\">\n                            <DatePicker\n                              selected={startDate}\n                              selectsStart\n                              // onChange={handleChangeStartDate}\n                              onChange={date => setStartDate(date)}\n                              popperModifiers={{\n                                preventOverflow: {\n                                  enabled: true\n                                }\n                              }}\n                              dateFormat=\"dd/MMM/yy\"\n                              onFocus={e => (e.target.readOnly = true)}\n                              // showTimeSelect\n                              timeFormat=\"HH:mm\"\n                              injectTimes={[\n                                setHours(setMinutes(new Date(), 1), 0),\n                                setHours(setMinutes(new Date(), 5), 12),\n                                setHours(setMinutes(new Date(), 59), 23)\n                              ]}\n                            />\n                          </div>\n                          <div className=\"form-group col-md-1 col-sm-2 col-xs-1\">\n                            <DatePicker\n                              selected={endDate}\n                              // onChange={handleChangeEndtDate}\n                              onChange={date => setEndDate(date)}\n                              popperModifiers={{\n                                preventOverflow: {\n                                  enabled: true\n                                }\n                              }}\n                              // showTimeSelect\n                              onFocus={e => (e.target.readOnly = true)}\n                              dateFormat=\"dd/MMM/yy\"\n                              timeFormat=\"HH:mm\"\n                              injectTimes={[\n                                setHours(setMinutes(new Date(), 1), 0),\n                                setHours(setMinutes(new Date(), 5), 12),\n                                setHours(setMinutes(new Date(), 59), 23)\n                              ]}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <br></br>\n                      <input\n                        type=\"submit\"\n                        className=\"btn btn-solid\"\n                        id=\"submit\"\n                        placeholder=\"search\"\n                        required=\"\"\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n              <br></br>\n              {orders ? (\n                <div>\n                  <Card\n                    bg={\"danger\"}\n                    style={{ width: \"18rem\" }}\n                    className=\"mb-2\"\n                    text={\"light\"}\n                  >\n                    <Card.Body>\n                      <Card.Title>\n                        {\" \"}\n                        {\n                          orders.filter(order => order.order_status === 1)\n                            .length\n                        }{\" \"}\n                        Pending Orders{\" \"}\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                  <Card\n                    bg={\"success\"}\n                    style={{ width: \"18rem\" }}\n                    className=\"mb-2\"\n                    text={\"light\"}\n                  >\n                    {/* <Card.Header>Order for today</Card.Header> */}\n                    <Card.Body>\n                      <Card.Title> {orders.length} Total Orders </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </section>\n      {orders ? <Result data={orders} columns={columns} /> : null}\n    </div>\n  );\n};\n\nexport default Manage;\n","import React, { Component } from \"react\";\n// import { Link, Redirect } from \"react-router-dom\";\n// import Breadcrumb from \"../common/breadcrumb\";\nimport { connect } from \"react-redux\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\nimport Form from \"./tableSearchForm\";\n\nimport { serviceAreaURL } from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\nimport { fetchUser } from \"../../../actions/user\";\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: null,\n      loading: false,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    // this.props.fetchUserType();\n    this.fetchServieArea();\n  }\n\n  fetchServieArea = () => {\n    this.setState({ loading: true }, () => {\n      authAxios\n        .get(serviceAreaURL)\n        .then(res => {\n          this.setState({\n            data: res.data[0]\n          });\n          this.setState({\n            places: res.data[0].places\n          });\n        })\n        .catch(err => {\n          this.setState({\n            error: err.message,\n            loading: false\n          });\n        });\n    });\n  };\n\n  render() {\n    const { places } = this.state;\n    // const { userType, token } = this.props;\n    // console.log(places);\n\n    return (\n      <div>\n        {/* <Breadcrumb title={\"Manage\"} /> */}\n\n        {places && <Form places={places} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserType: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Manage);\n"],"sourceRoot":""}