{"version":3,"sources":["components/ld/manageOrders/CustomInput.jsx","components/ld/manageOrders/testTable.jsx","components/ld/manageOrders/shopOrderTable.jsx"],"names":["CustomInput","props","placeholder","name","value","_props$onChange","onChange","react_default","a","createElement","Form","Group","Control","window","Date","prototype","isValid","this","getTime","ColumnFilter","_ref","_ref$column","column","filterValue","setFilter","filter","e","target","undefined","concat","ReactTable","_ref2","columns","data","filterTypes","year","rows","id","row","rowValue","values","Number","getFullYear","text","String","toLowerCase","startsWith","defaultColumn","Filter","_useTable","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","Container","Table","Object","assign","responsive","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","i","render","getHeaderProps","isSorted","isSortedDesc","getSortByToggleProps","canFilter","extraClass","key","className","getRowProps","cells","cell","getCellProps","Wrapper","styled","div","_templateObject","DateWrapper","_templateObject2","StyledCard","_templateObject3","StyledButton","button","_templateObject4","Manage","_useState","useState","_useState2","_Users_swalihvpm_Desktop_django_react_ftest_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","orders","setOrders","_useState3","_useState4","setLoading","_useState5","setHours","setMinutes","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","useEffect","fetchOrders","endingtDate","staringtDate","authAxios","get","orderFilterURL","params","then","res","catch","err","Header","accessor","Cell","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","process","react_datepicker__WEBPACK_IMPORTED_MODULE_10___default","selected","selectsStart","date","dateFormat","onFocus","readOnly","popperModifiers","preventOverflow","enabled","timeFormat","injectTimes","type","onClick","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","bg","style","width","marginTop","marginBottom","Body","Title","length","_testTable__WEBPACK_IMPORTED_MODULE_15__"],"mappings":"mJAGeA,EAAA,SAAAC,GAAS,IAChBC,EAAoDD,EAApDC,YAAaC,EAAuCF,EAAvCE,KAAMC,EAAiCH,EAAjCG,MADHC,EACoCJ,EAA1BK,gBADV,IAAAD,EACqB,kBAAM,MAD3BA,EAEtB,OAEEE,EAAAC,EAAAC,cAACC,EAAA,EAAKC,MAAN,KACEJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,QAAN,CACEV,YAAaA,EACbC,KAAMA,EACNC,MAAOA,GAAgB,GACvBE,SAAUA,MCPlBO,OAAOC,KAAKC,UAAUC,QAAU,WAI9B,OAAOC,KAAKC,YAAcD,KAAKC,WAGjC,IAAMC,EAAe,SAAAC,GAAoD,IAAAC,EAAAD,EAAjDE,OAAUC,EAAuCF,EAAvCE,YAAaC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,OACxD,OACElB,EAAAC,EAAAC,cAACT,EAAD,CACEI,MAAOmB,GAAe,GACtBjB,SAAU,SAAAoB,GACRF,EAAUE,EAAEC,OAAOvB,YAASwB,IAE9B1B,YAAW,UAAA2B,OAAYJ,GAAkB,GAA9B,UA0HFK,IAjHI,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,KAEvBC,EAAc,CAClBC,KAAM,SAACC,EAAMC,EAAId,GACf,OAAOa,EAAKX,OAAO,SAAAa,GACjB,IAAMC,EAAWD,EAAIE,OAAOH,GAC5B,aAAoBT,IAAbW,GACLE,OAAOlB,IACP,IAAIT,KAAKyB,IACT,IAAIzB,KAAKyB,GAAUvB,YACjB,IAAIF,KAAKyB,GAAUG,gBAAkBD,OAAOlB,MAIpDoB,KAAM,SAACP,EAAMC,EAAId,GACf,OAAOa,EAAKX,OAAO,SAAAa,GACjB,IAAMC,EAAWD,EAAIE,OAAOH,GAC5B,YAAoBT,IAAbW,GACHK,OAAOL,GACJM,cACAC,WAAWF,OAAOrB,GAAasB,mBAKtCE,EAAgB,CAEpBC,OAAQ7B,GA3B8B8B,EAmCpCC,mBACF,CACElB,UACAC,OACAc,gBACAb,eAGFiB,aAEAC,aAfAC,EA9BsCJ,EA8BtCI,cACAC,EA/BsCL,EA+BtCK,kBACAC,EAhCsCN,EAgCtCM,aACAnB,EAjCsCa,EAiCtCb,KACAoB,EAlCsCP,EAkCtCO,WAcF,OACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAA,EAADC,OAAAC,OAAA,CACEC,WAAW,KACXC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,KAAK,MACDZ,KAEJ9C,EAAAC,EAAAC,cAAA,aACG8C,EAAaW,IAAI,SAAAC,GAAW,OAC3B5D,EAAAC,EAAAC,cAAA,KAAQ0D,EAAYC,sBACjBD,EAAYE,QAAQH,IAAI,SAAC5C,EAAQgD,GAAM,IAGpCC,EAOEjD,EAPFiD,OACAC,EAMElD,EANFkD,eACAC,EAKEnD,EALFmD,SACAC,EAIEpD,EAJFoD,aACAC,EAGErD,EAHFqD,qBAEAC,EACEtD,EADFsD,UAEIC,EAAaJ,EACfC,EACE,OACA,MACF,GACJ,OACEnE,EAAAC,EAAAC,cAAA,MACEqE,IAAG,MAAAjD,OAAQyC,GACXS,UAAWF,GAGXtE,EAAAC,EAAAC,cAAA,MAAS+D,EAAeG,KACrBJ,EAAO,WAGVhE,EAAAC,EAAAC,cAAA,WAAMmE,EAAYL,EAAO,UAAY,aAOjDhE,EAAAC,EAAAC,cAAA,QAAW6C,IACRlB,EAAK8B,IAAI,SAAC5B,EAAKgC,GAEd,OADAd,EAAWlB,GAET/B,EAAAC,EAAAC,cAAA,KAAQ6B,EAAI0C,cACT1C,EAAI2C,MAAMf,IAAI,SAAAgB,GACb,OACE3E,EAAAC,EAAAC,cAAA,KAAQyE,EAAKC,eAAiBD,EAAKX,OAAO,ywCCjH9D,IAAMa,EAAUC,IAAOC,IAAVC,KAQPC,EAAcH,IAAOC,IAAVG,KAWXC,EAAaL,IAAOC,IAAVK,KAWVC,EAAeP,IAAOQ,OAAVC,KA2KHC,UA7JA,WAAM,IAAAC,EACSC,mBAAS,MADlBC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GACZI,EADYF,EAAA,GACJG,EADIH,EAAA,GAAAI,EAEWL,oBAAS,GAFpBM,EAAA5C,OAAAwC,EAAA,EAAAxC,CAAA2C,EAAA,GAEHE,GAFGD,EAAA,GAAAA,EAAA,IAAAE,EAIeR,mBAChCS,kBAASC,kBAAW,IAAI7F,KAAQ,GAAI,IALnB8F,EAAAjD,OAAAwC,EAAA,EAAAxC,CAAA8C,EAAA,GAIZI,EAJYD,EAAA,GAIDE,EAJCF,EAAA,GAAAG,EAOWd,mBAC5BS,kBAASC,kBAAW,IAAI7F,KAAQ,IAAK,KARpBkG,EAAArD,OAAAwC,EAAA,EAAAxC,CAAAoD,EAAA,GAOZE,EAPYD,EAAA,GAOHE,EAPGF,EAAA,GAWnBG,oBAAU,WACRC,KACC,IAEH,IAAMA,EAAc,SAAA1F,GAElB,IAAM2F,OAA0BzF,IAAZqF,EAAwB,KAAOA,EAC7CK,OAA6B1F,IAAdiF,EAA0B,KAAOA,EAGtDL,GAAW,GACXe,IACGC,IAAIC,IAAgB,CACnBC,OAAQ,CACNJ,eACAD,iBAGHM,KAAK,SAAAC,GACJvB,EAAUuB,EAAI3F,MACduE,GAAW,KAEZqB,MAAM,SAAAC,GACLtB,GAAW,MAIXxE,EAAU,CACd,CACE+F,OAAQ,KACRC,SAAU,KAEVC,KAAM,SAAA7G,GAAA,IAAGkB,EAAHlB,EAAGkB,IAAH,OACJ4F,EAAA1H,EAAAC,cAAC0H,EAAA,EAAD,CAAMC,GAAE,GAAAvG,OAAKwG,GAAL,WAAAxG,OAAqCS,EAAIE,OAAOH,KACrDC,EAAIE,OAAOH,MAIlB,CACE0F,OAAQ,WACRC,SAAU,iBAEZ,CACED,OAAQ,OACRC,SAAU,aAGZ,CACED,OAAQ,SACRC,SAAU,eAEZ,CACED,OAAQ,OACRC,SAAU,cAGZ,CACED,OAAQ,SACRC,SAAU,iBAEZ,CACED,OAAQ,kBACRC,SAAU,oBAKd,OACEE,EAAA1H,EAAAC,cAAC2E,EAAD,KACE8C,EAAA1H,EAAAC,cAACiF,EAAD,KACEwC,EAAA1H,EAAAC,cAAC+E,EAAD,KACE0C,EAAA1H,EAAAC,cAAA,kBACAyH,EAAA1H,EAAAC,cAAA,gBACAyH,EAAA1H,EAAAC,cAAC6H,EAAA9H,EAAD,CACE+H,SAAU1B,EACV2B,cAAY,EAEZlI,SAAU,SAAAmI,GAAI,OAAI3B,EAAa2B,IAC/BC,WAAW,YAEXC,QAAS,SAAAjH,GAAC,OAAKA,EAAEC,OAAOiH,UAAW,GACnCC,gBAAiB,CACfC,gBAAiB,CACfC,SAAS,IAGbC,WAAW,QACXC,YAAa,CACXvC,kBAASC,kBAAW,IAAI7F,KAAQ,GAAI,GACpC4F,kBAASC,kBAAW,IAAI7F,KAAQ,GAAI,IACpC4F,kBAASC,kBAAW,IAAI7F,KAAQ,IAAK,OAIzCoH,EAAA1H,EAAAC,cAAC6H,EAAA9H,EAAD,CACEuE,UAAU,aACVwD,SAAUtB,EACV4B,gBAAiB,CACfC,gBAAiB,CACfC,SAAS,IAIbzI,SAAU,SAAAmI,GAAI,OAAIvB,EAAWuB,IAC7BE,QAAS,SAAAjH,GAAC,OAAKA,EAAEC,OAAOiH,UAAW,GAEnCF,WAAW,YACXM,WAAW,QACXC,YAAa,CACXvC,kBAASC,kBAAW,IAAI7F,KAAQ,GAAI,GACpC4F,kBAASC,kBAAW,IAAI7F,KAAQ,GAAI,IACpC4F,kBAASC,kBAAW,IAAI7F,KAAQ,IAAK,QAI3CoH,EAAA1H,EAAAC,cAACmF,EAAD,CACEsD,KAAK,SAEL7G,GAAG,SACHnC,YAAY,SACZiJ,QAAS/B,GALX,WAWDhB,EACC8B,EAAA1H,EAAAC,cAAA,WACEyH,EAAA1H,EAAAC,cAAC2I,EAAA,EAAD,CACEC,GAAI,YACJC,MAAO,CAAEC,MAAO,QAASC,UAAW,OAAQC,aAAc,QAC1D1E,UAAU,OACVpC,KAAM,SAGNuF,EAAA1H,EAAAC,cAAC2I,EAAA,EAAKM,KAAN,KACExB,EAAA1H,EAAAC,cAAC2I,EAAA,EAAKO,MAAN,SAAcvD,EAAOwD,OAArB,eAIJ,KACHxD,EAAS8B,EAAA1H,EAAAC,cAACoJ,EAAA,EAAD,CAAQ5H,KAAMmE,EAAQpE,QAASA,IAAc","file":"static/js/22.8ddf1aa7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default props => {\n  let { placeholder, name, value, onChange = () => null } = props;\n  return (\n    // <div class=\"col-lg\">\n    <Form.Group>\n      <Form.Control\n        placeholder={placeholder}\n        name={name}\n        value={value ? value : \"\"}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n};\n","import React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport CustomInput from \"./CustomInput\";\n\nwindow.Date.prototype.isValid = function() {\n  // An invalid date object returns NaN for getTime() and NaN is the only\n  // object not strictly equal to itself.\n  // eslint-disable-next-line\n  return this.getTime() === this.getTime();\n};\n\nconst ColumnFilter = ({ column: { filterValue, setFilter, filter } }) => {\n  return (\n    <CustomInput\n      value={filterValue || \"\"}\n      onChange={e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${filter ? filter : \"\"}...`}\n    />\n  );\n};\n\n/**\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react table has data that consist of an array of JSONs\n */\nconst ReactTable = ({ columns, data }) => {\n  // functions to run when a column is filtered depending on the type\n  const filterTypes = {\n    year: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined &&\n          Number(filterValue) &&\n          new Date(rowValue) &&\n          new Date(rowValue).isValid()\n          ? new Date(rowValue).getFullYear() === Number(filterValue)\n          : true;\n      });\n    },\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined\n          ? String(rowValue)\n              .toLowerCase()\n              .startsWith(String(filterValue).toLowerCase())\n          : true;\n      });\n    }\n  };\n  const defaultColumn = {\n    // Let's set up our default Filter UI\n    Filter: ColumnFilter\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes\n    },\n    // hook for filters\n    useFilters,\n    // hook for sorting\n    useSortBy\n  );\n  // console.log(defaultColumn);\n  return (\n    <Container>\n      <Table\n        responsive=\"md\"\n        striped\n        bordered\n        hover\n        size=\"sm\"\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => {\n                // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n                const {\n                  render,\n                  getHeaderProps,\n                  isSorted,\n                  isSortedDesc,\n                  getSortByToggleProps,\n                  // filter,\n                  canFilter\n                } = column;\n                const extraClass = isSorted\n                  ? isSortedDesc\n                    ? \"desc\"\n                    : \"asc\"\n                  : \"\";\n                return (\n                  <th\n                    key={`th-${i}`}\n                    className={extraClass}\n                    // getHeaderProps now receives a function\n                  >\n                    <div {...getHeaderProps(getSortByToggleProps())}>\n                      {render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>{canFilter ? render(\"Filter\") : null}</div>\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default ReactTable;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../actions/auth\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { authAxios } from \"../../../authAxios\";\nimport { orderFilterURL } from \"../../../constants\";\nimport { useFormik, Field } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport { Form, Card } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport Result from \"./testTable\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin: 20px 10px 30px 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DateWrapper = styled.div`\n  margin: 10px auto 10px auto;\n  margin: 10px;\n  display: grid;\n  grid-template-columns: 1fr 6fr;\n  grid-template-rows: 1fr 1fr;\n  /* width: 250px; */\n  gap: 10px;\n  /* overflow: hidden; */\n  /* hight: 10px; */\n`;\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  color: #333;\n  border-radius: 10px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  margin: 10px;\n`;\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  padding: 10px 30px;\n  cursor: pointer;\n  background: #ff4c3b;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  border: 1px #fff solid;\n  &:hover {\n    transform: scale(0.98);\n    color: #343a40;\n  }\n`;\nconst Manage = () => {\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [startDate, setStartDate] = useState(\n    setHours(setMinutes(new Date(), 0), 0)\n  );\n  const [endDate, setEndDate] = useState(\n    setHours(setMinutes(new Date(), 59), 23)\n  );\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const fetchOrders = e => {\n    // e.preventDefault();\n    const endingtDate = endDate === undefined ? null : endDate;\n    const staringtDate = startDate === undefined ? null : startDate;\n    // console.log(endingtDate, staringtDate);\n    // console.log(staringtDate);\n    setLoading(true);\n    authAxios\n      .get(orderFilterURL, {\n        params: {\n          staringtDate,\n          endingtDate\n        }\n      })\n      .then(res => {\n        setOrders(res.data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n      });\n  };\n\n  const columns = [\n    {\n      Header: \"ID\",\n      accessor: \"id\",\n\n      Cell: ({ row }) => (\n        <Link to={`${process.env.PUBLIC_URL}/order/${row.values.id}`}>\n          {row.values.id}\n        </Link>\n      )\n    },\n    {\n      Header: \"Customer\",\n      accessor: \"customer_name\"\n    },\n    {\n      Header: \"Area\",\n      accessor: \"area_name\"\n    },\n\n    {\n      Header: \"Status\",\n      accessor: \"orderStatus\"\n    },\n    {\n      Header: \"Date\",\n      accessor: \"start_date\"\n    },\n\n    {\n      Header: \"Mobile\",\n      accessor: \"mobile_number\"\n    },\n    {\n      Header: \"Mode of payment\",\n      accessor: \"mode_of_payment\"\n    }\n  ];\n  // console.log(loading);\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <DateWrapper>\n          <h6>From</h6>\n          <h6>To</h6>\n          <DatePicker\n            selected={startDate}\n            selectsStart\n            // onChange={handleChangeStartDate}\n            onChange={date => setStartDate(date)}\n            dateFormat=\"dd/MMM/yy\"\n            // showTimeSelect\n            onFocus={e => (e.target.readOnly = true)}\n            popperModifiers={{\n              preventOverflow: {\n                enabled: true\n              }\n            }}\n            timeFormat=\"HH:mm\"\n            injectTimes={[\n              setHours(setMinutes(new Date(), 1), 0),\n              setHours(setMinutes(new Date(), 5), 12),\n              setHours(setMinutes(new Date(), 59), 23)\n            ]}\n          />\n\n          <DatePicker\n            className=\"form-group\"\n            selected={endDate}\n            popperModifiers={{\n              preventOverflow: {\n                enabled: true\n              }\n            }}\n            // onChange={handleChangeEndtDate}\n            onChange={date => setEndDate(date)}\n            onFocus={e => (e.target.readOnly = true)}\n            // showTimeSelect\n            dateFormat=\"dd/MMM/yy\"\n            timeFormat=\"HH:mm\"\n            injectTimes={[\n              setHours(setMinutes(new Date(), 1), 0),\n              setHours(setMinutes(new Date(), 5), 12),\n              setHours(setMinutes(new Date(), 59), 23)\n            ]}\n          />\n        </DateWrapper>\n        <StyledButton\n          type=\"submit\"\n          // className=\"btn btn-solid\"\n          id=\"submit\"\n          placeholder=\"search\"\n          onClick={fetchOrders}\n          // required=\"\"\n        >\n          Submit\n        </StyledButton>\n      </StyledCard>\n      {orders ? (\n        <div>\n          <Card\n            bg={\"secondary\"}\n            style={{ width: \"18rem\", marginTop: \"20px\", marginBottom: \"20px\" }}\n            className=\"mb-2\"\n            text={\"light\"}\n          >\n            {/* <Card.Header>Order for today</Card.Header> */}\n            <Card.Body>\n              <Card.Title> {orders.length} Orders </Card.Title>\n            </Card.Body>\n          </Card>\n        </div>\n      ) : null}\n      {orders ? <Result data={orders} columns={columns} /> : null}\n    </Wrapper>\n  );\n};\n\nexport default Manage;\n"],"sourceRoot":""}