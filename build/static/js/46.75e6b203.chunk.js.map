{"version":3,"sources":["components/ld/checkout/modeOfPayment.jsx","components/ld/checkout/orderAddress.jsx","components/ld/checkout/main.jsx"],"names":["ModeOfPayment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCheckBox","e","handleModeOfPayment","target","value","_this2","options","react_default","a","createElement","formik_esm","initialValues","modOfPayment","formik","className","name","_ref","field","map","option","Fragment","key","id","assign","type","onChange","htmlFor","Component","OrderAddress","address","PlaceName","areaName","full_address","vilalgeName","districtName","stateName","phone_number","href","concat","process","checkOut","state","loading","shipping","addressList","cart","selectedAddress","shop_id","ShopModeOfPayment","selectedModeofPayment","coupon","Coupondisplay","offer","error","handleDisplyCoupon","setState","handleFetchOrder","authAxios","get","orderSummaryURL","then","res","data","fetchModeOfPayment","catch","err","shopID","undefined","ShopModeOfPaymentURL","params","handleFetchAddresses","_callee","regenerator_default","wrap","_context","prev","next","addressListURL","stop","handleCouponChange","handleCouponSubmit","_callee2","code","_context2","preventDefault","post","addCouponURL","toast","success","handleAddress","event","console","log","mode","submit","ev","_this$state","length","checkoutURL","redirectToOrders","refreshCart","clearKart","setTimeout","history","push","isAuthenticated","_this$state2","lib","Navbar","bg","style","color","shop_name","place_name","shipping_message","order_items","item","index","itemLocalName","vname","quantity","itemName","final_price","total","Link","to","orderAddress","modeOfPayment","Alert","onClick","variant","display","bind","required","message","Button","size","Redirect","connect","auth","token","shoppingCart","dispatch","fetchCart"],"mappings":"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","file":"static/js/46.75e6b203.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nclass ModeOfPayment extends Component {\n  constructor(props) {\n    super(props);\n  }\n  handleCheckBox = e => {\n    this.props.handleModeOfPayment(e.target.value);\n  };\n\n  // handleChange = e => {\n  //   this.props.handleModeOfPayment(e);\n  // };\n\n  render() {\n    const { options } = this.props;\n    const initialValues = {\n      modOfPayment: \"\"\n    };\n    // console.log(this.props.modOfPayment);\n\n    return (\n      <Formik initialValues={initialValues}>\n        {formik => (\n          <Form>\n            <div className=\"form-control\">\n              <Field name=\"modOfPayment\">\n                {({ field }) => {\n                  // console.log(field);\n                  return options.map(option => {\n                    // console.log(option);\n                    return (\n                      <React.Fragment key={option.id}>\n                        <div className=\"row\">\n                          <div className=\"col-lg-3\">\n                            <div className=\"box\">\n                              <div className=\"radio\">\n                                <input\n                                  type=\"radio\"\n                                  id={option.id}\n                                  {...field}\n                                  // {...rest}\n                                  value={option.id}\n                                  onChange={e => {\n                                    this.handleCheckBox(e);\n                                  }}\n                                />\n                                <label htmlFor={option.name}>\n                                  {option.name}\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </React.Fragment>\n                    );\n                  });\n                }}\n              </Field>\n              {/* <ErrorMessage component={TextError} name={name} /> */}\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default ModeOfPayment;\n","import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nclass OrderAddress extends Component {\n  render() {\n    const { address } = this.props;\n    // console.log(address);\n    return (\n      <div className=\"row\">\n        <div className=\"col-lg-9\">\n          {/* <div className=\"box-head\">\n            <h3>Order Address</h3>\n          </div> */}\n          <div className=\"dashboard-right\">\n            <div className=\"dashboard\">\n              <div className=\"box-account box-info\">\n                <div className=\"box-head\">\n                  <h2>{address.PlaceName}</h2>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"box\">\n                      <div className=\"box-title\">\n                        <h3>{address.areaName}</h3>\n                      </div>\n                      <div className=\"box-content\">\n                        <h6>{address.full_address}</h6>\n                        <h6>Village: {address.vilalgeName}</h6>\n                        <h6>District: {address.districtName}</h6>\n                        <h6>Sate: {address.stateName}</h6>\n                        <h6>Phone: {address.phone_number}</h6>\n                        <br></br>\n                        <a\n                          href={`${process.env.PUBLIC_URL}/editaddress/${address.id}`}\n                        >\n                          Edit\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderAddress;\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Button, Navbar } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {\n  addressListURL,\n  checkoutURL,\n  orderSummaryURL,\n  ShopModeOfPaymentURL,\n  addCouponURL\n} from \"../../../constants\";\nimport { authAxios } from \"../../../authAxios\";\nimport { fetchCart, clearKart } from \"../../../actions/cart\";\nimport ModeOfPayment from \"./modeOfPayment\";\nimport OrderAddress from \"./orderAddress\";\n\nclass checkOut extends Component {\n  state = {\n    loading: false,\n    shipping: 25,\n    addressList: [],\n    cart: null,\n    selectedAddress: null,\n    shop_id: null,\n    ShopModeOfPayment: [],\n    selectedModeofPayment: null,\n    coupon: \"\",\n    Coupondisplay: false,\n    offer: \"\",\n    error: \"\"\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    // this.props.refreshCart();\n    this.handleFetchOrder();\n  }\n  handleDisplyCoupon = () => {\n    this.setState({ Coupondisplay: !this.state.Coupondisplay });\n  };\n  handleFetchOrder = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(orderSummaryURL)\n      .then(res => {\n        this.setState({ cart: res.data, loading: false });\n        this.setState({ shop_id: res.data.shop_id }, () => {\n          this.fetchModeOfPayment();\n        });\n      })\n\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  fetchModeOfPayment = () => {\n    // console.log(\"fetching mode\");\n    const shopID = this.state.shop_id;\n    if (shopID !== undefined) {\n      // console.log(shopID);\n      this.setState({ loading: true });\n      authAxios\n        .get(ShopModeOfPaymentURL, {\n          params: {\n            shopID\n          }\n        })\n        .then(res => {\n          this.setState({ ShopModeOfPayment: res.data, loading: false });\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    }\n  };\n\n  handleFetchAddresses = async () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(addressListURL)\n      .then(res => {\n        this.setState({ addressList: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleCouponChange = e => {\n    this.setState({ coupon: e.target.value });\n    // console.log(e.target.value);\n  };\n\n  handleCouponSubmit = async e => {\n    e.preventDefault();\n    // console.log(this.state.coupon);\n    const code = this.state.coupon;\n    if (code !== \"\") {\n      this.setState({ loading: true });\n      authAxios\n        .post(addCouponURL, {\n          code\n        })\n        .then(res => {\n          this.setState({ offer: res.data, loading: false });\n          toast.success(\"Coupon applied succesfully\");\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    } else {\n      toast.error(\"Coupon not entered\");\n    }\n  };\n\n  handleAddress = event => {\n    this.setState({ selectedAddress: event.target.value });\n    console.log(event.target.value);\n  };\n\n  handleModeOfPayment = mode => {\n    this.setState({ selectedModeofPayment: mode });\n    // console.log(mode);\n  };\n  submit = ev => {\n    ev.preventDefault();\n\n    if (this.state.addressList) {\n    }\n    const selectedAddress = this.state.addressList[0].id;\n    // console.log(addressList);\n    this.setState({ loading: true });\n    const { selectedModeofPayment, addressList } = this.state;\n\n    if (selectedModeofPayment !== null && addressList.length > 0) {\n      authAxios\n        .post(checkoutURL, {\n          selectedAddress,\n          selectedModeofPayment\n        })\n        .then(res => {\n          this.setState({ loading: false, success: true });\n          toast.success(\"Order placed succesfully\");\n          this.redirectToOrders();\n          this.props.refreshCart();\n        })\n        .catch(err => {\n          this.setState({ loading: false, error: err }, () => {\n            // this.redirectToOrders();\n            toast.success(\"There was an error\");\n          });\n        });\n    } else {\n      toast.error(\"Please select mode of payment and create an address\");\n    }\n  };\n\n  redirectToOrders() {\n    this.props.clearKart();\n    // console.log(\"refreshcard\");\n    setTimeout(this.props.history.push(\"/orders\"), 10000);\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const {\n      addressList,\n      selectedAddress,\n      cart,\n      ShopModeOfPayment,\n      shop_id,\n      offer,\n      error\n    } = this.state;\n\n    // console.log(this.state.offer);\n    // console.log(addressList.length);\n\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <div>\n        {/* <Header /> */}\n        <ToastContainer />\n        {/* <Footer /> */}\n        {this.state.loading && <div className=\"loading-cls\"></div>}\n        {cart ? (\n          <div className=\"container padding-cls\">\n            <div className=\"checkout-page\">\n              <div className=\"checkout-form\">\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <Navbar bg=\"dark\">\n                      <h4 style={{ color: \"white\" }}>Shop details</h4>\n                    </Navbar>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-9\">\n                        <div className=\"dashboard-right\">\n                          <div className=\"dashboard\">\n                            <div className=\"box-account box-info\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                  <div className=\"box\">\n                                    <h3>{cart.shop_name}</h3>\n                                    <h6>{cart.place_name}</h6>\n                                  </div>\n                                  <br></br>\n                                  <h4>{cart.shipping_message}</h4>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                {/* end of shop detail  */}\n                <div className=\"col-lg-6 col-sm-8 col-xs-12\">\n                  <Navbar bg=\"dark\">\n                    <h4 style={{ color: \"white\" }}>Product details</h4>\n                  </Navbar>\n                  <div className=\"checkout-details\">\n                    <div className=\"order-box\">\n                      <div className=\"title-box\">\n                        <div>\n                          Product <span> Total</span>\n                        </div>\n                      </div>\n                      <ul className=\"qty\">\n                        {cart.order_items.map((item, index) => {\n                          return (\n                            <li key={index}>\n                              {item.itemLocalName ? (\n                                <React.Fragment>\n                                  {item.itemLocalName} [{item.vname}] {\" x \"}{\" \"}\n                                  {item.quantity}\n                                </React.Fragment>\n                              ) : (\n                                <React.Fragment>\n                                  {item.itemName} [{item.vname}] {\" x \"}{\" \"}\n                                  {item.quantity}\n                                </React.Fragment>\n                              )}\n\n                              <span>\n                                {/* {symbol} */}\n                                {item.final_price}\n                              </span>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      <ul className=\"sub-total\">\n                        <li>\n                          Total{\" \"}\n                          <span className=\"count\">\n                            {/* {symbol} */}\n                            {cart.total}\n                          </span>\n                        </li>\n                        {/* <li>\n                          Shipping{\" \"}\n                          <span className=\"count\">{this.state.shipping}</span>\n                        </li> */}\n                      </ul>\n                      {/* \n                      <ul className=\"total\">\n                        <li>\n                          Total{\" \"}\n                          <span className=\"count\">\n                       \n                            {cart.total}\n                          </span>\n                        </li>\n                      </ul> */}\n                    </div>\n\n                    <Link style={{ color: \"#FFF\" }} to={`/order-summary`}>\n                      <button type=\"button\" className=\"btn btn-secondary\">\n                        Edit Order\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n\n              {addressList.length > 0 ? (\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <Navbar bg=\"dark\">\n                      <h4 style={{ color: \"white\" }}>Delivery Address</h4>\n                    </Navbar>\n                    <OrderAddress address={addressList[0]} />\n                  </div>\n                </section>\n              ) : (\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <div className=\"account-sidebar\">\n                      <Link style={{ color: \"#FFF\" }} to={`/create-address`}>\n                        Add Address\n                      </Link>\n                    </div>\n                  </div>\n                </section>\n              )}\n\n              {ShopModeOfPayment ? (\n                <section className=\"section-b-space\">\n                  <div className=\"container\">\n                    <Navbar bg=\"dark\">\n                      <h4 style={{ color: \"white\" }}>Select Payment Method</h4>\n                    </Navbar>\n                    <ModeOfPayment\n                      handleModeOfPayment={this.handleModeOfPayment}\n                      options={ShopModeOfPayment}\n                    />\n                  </div>\n                </section>\n              ) : null}\n\n              <section className=\"section-b-space\">\n                <div className=\"container\">\n                  <Alert\n                    onClick={() => {\n                      this.handleDisplyCoupon();\n                    }}\n                    variant={\"success\"}\n                  >\n                    Have a coupon ?\n                  </Alert>\n                  <div\n                    className=\"row\"\n                    style={{ display: this.state.Coupondisplay ? \"\" : \"none\" }}\n                  >\n                    <div className=\"col-lg-6\">\n                      <div className=\"theme-card\">\n                        <form\n                          className=\"theme-form\"\n                          // onSubmit={this.handleCouponSubmit}\n                        >\n                          <div className=\"form-group\">\n                            <Navbar bg=\"dark\">\n                              <h4 style={{ color: \"white\" }}>\n                                Enter Coupon code\n                              </h4>\n                            </Navbar>\n                            <br></br>\n                            {/* <label htmlFor=\"coupon\">Enter Coupon code</label> */}\n                            <input\n                              // onChange={this.handleCouponChange}\n                              onChange={this.handleCouponChange.bind(this)}\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"coupon\"\n                              value={this.state.coupon}\n                              name=\"coupon\"\n                              required=\"\"\n                            />\n                          </div>\n                          <div>\n                            {offer ? (\n                              <Alert variant={\"success\"}>\n                                Offer Applied !!{offer.message}\n                              </Alert>\n                            ) : null}\n                          </div>\n                          <div>\n                            {error ? (\n                              <Alert variant={\"danger\"}>\n                                {\" \"}\n                                This coupon is not valid\n                              </Alert>\n                            ) : null}\n                          </div>\n                          <Button\n                            type=\"submit\"\n                            onClick={this.handleCouponSubmit.bind(this)}\n                            variant=\"flat\"\n                            size=\"xxl\"\n                            style={{ color: \"red\" }}\n                          >\n                            Apply coupon\n                          </Button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  <br></br>\n                  <button\n                    type=\"button\"\n                    className=\"btn-solid btn\"\n                    onClick={this.submit}\n                  >\n                    Place Order\n                  </button>\n                </div>\n                <br /> <br />\n              </section>\n            </div>\n          </div>\n        ) : (\n          <p>You dont have an active order</p>\n        )}\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart()),\n    clearKart: () => dispatch(clearKart)\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token,\n    cart: state.cart.shoppingCart\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(checkOut);\n// export default checkOut;\n"],"sourceRoot":""}